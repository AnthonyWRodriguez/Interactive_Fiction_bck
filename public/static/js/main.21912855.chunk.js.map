{"version":3,"sources":["Components/Utilities/Utilities.tsx","Components/SecureRoute/SecureRoute.tsx","Components/Header/Header.tsx","Components/Pages/Page.tsx","Components/Pages/Public/Home/Home.tsx","Components/Common/Validators/Validators.tsx","Components/Common/Input/Input.tsx","Components/Pages/Public/Login/Login.tsx","Components/Pages/Public/New/New.tsx","Components/Pages/Private/Game/Game.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["normalAxios","createBrowserHistory","axios","create","defaults","headers","common","post","put","naxios","secureAxios","saxios","localStorageAvailable","localStorage","setItem","removeItem","e","setLocalStorage","key","value","getLocalStorage","getItem","removeLocalStorage","parts","auth","email","name","render","props","component","path","exact","to","Header","onClickLogout","logout","state","this","className","onClick","Component","children","Login","onClickBtn","alert","setState","redirect","redirectTo","dir","emailRegex","badEmail","emptyRegex","badNames","allMoves","error","caption","type","id","onChange","placeholder","onKeyDown","keyDown","validate","val","nameErrors","tmpErrors","undefined","test","push","Object","assign","emailError","onChangeText","currentTarget","errors","length","preventDefault","stopPropagation","get","then","data","userActive","login","userName","userEmail","catch","err","console","log","New","nameError","Game","addAndSetState","emailS","commands","allText","command","aside","document","getElementById","scrollTop","scrollHeight","componentDidMount","getHit","newHP","user","userRealHealth","userN","health","hitEnemy","remainingHealth","roomN","room","roomName","killEnemy","roomEnemyAlive","a","roomID","userCurrentRoom","chestName","chest","objectName","uName","currentRName","directionAttack","h","direction","objectType","objectValue","objectWeight","userLeftEquip","userRightEquip","enemy","roomEnemy","me","userAtk","roomEnemyHealth","enemyName","enemyAttack","rslt","enemyATK","enemyWeapon","attackSequence","left","right","myNewHP","checkIfKey","words","obj","charAt","toUpperCase","slice","x","userInventory","changeRoom","mainGameCode","toLowerCase","split","realWords","forEach","word","objectText","objectTextUpC","printed","errorEquipUnequip","uInv","userBaseHealth","roomObjectsInv","roomLook","verbs","allV","roomDecision","roomForwardBool","roomForward","toString","roomBackwardBool","roomBackward","roomLeftBool","roomLeft","roomRightBool","roomRight","c","verbText","associateVerb","d","objectHelp","roomObjectsEnv","b","entries","uri","msg","objectN","InvObjs","more","ifInv","allInventory","mainArray","s","object","currentRID","leftE","rightE","realH","baseH","doorP","onKeyPress","keyCode","_id","roomEnter","roomEnterEnemy","enemyDesc","userCommands","uiItems","num","map","item","App","uEmail","username","useremail","Boolean","window","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.21912855.chunk.js","sourcesContent":["import axios from 'axios';\nimport { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory();\n\nlet normalAxios = axios.create();\nnormalAxios.defaults.headers.common['cache-control'] = \"no-cache\";\nnormalAxios.defaults.headers.post['Content-Type'] = \"no-cache\";\nnormalAxios.defaults.headers.put['Content-Type'] = \"no-cache\";\n\nexport const naxios = normalAxios;\n\nlet secureAxios = axios.create();\nsecureAxios.defaults.headers.common['cache-control'] = \"no-cache\";\nsecureAxios.defaults.headers.post['Content-Type'] = \"no-cache\";\nsecureAxios.defaults.headers.put['Content-Type'] = \"no-cache\";\n\nexport const saxios = secureAxios;\n\nconst localStorageAvailable = (()=>{\n    let b = 'b';\n    try{\n        localStorage.setItem(b, b);\n        localStorage.removeItem(b);\n        return true;\n    }catch(e){\n        return false;\n    }\n});\n\nexport const setLocalStorage = (key:string, value:string)=>{\n    if(localStorageAvailable()){\n        localStorage.setItem(key, value);\n        return true;\n    }else{\n        return false;\n    }\n}\n\nexport const getLocalStorage = (key:string)=>{\n    if(localStorageAvailable()){\n        return localStorage.getItem(key);\n    }else{\n        return null;\n    }\n}\n\nexport const removeLocalStorage = (key:string)=>{\n    if(localStorageAvailable()){\n        localStorage.removeItem(key);\n        return true;\n    }else{\n        return false;\n    }\n}","import React from 'react';\nimport {Route, Redirect} from 'react-router-dom';\n\nexport default(parts:IEnum)=>{\n    if(parts.auth.email!==\"\" || parts.auth.name!==\"\"){\n        return(\n            <Route render={(...props) => { return (<parts.component {...props} auth={parts.auth}/>) }} path={parts.path} exact />\n        )\n    }else{\n        return(\n            <Redirect to=\"/login\"/>        \n        )\n    }\n}\ninterface IEnum{\n    component: any;\n    auth: {\n        email: string;\n        name: string;\n        logout?:()=>void;\n    };\n    path: string;\n}","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom'; \nimport { IoIosLogIn, IoIosLogOut } from 'react-icons/io'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { IAuth } from '../Common/Interfaces/Interfaces';\n\nexport default class Header extends Component<IAuth, IHeaderState>{\n    constructor(props: IAuth){\n        super(props);\n        this.state = {\n        }\n    }\n    onClickLogout = ()=>{\n        if(this.props.auth.logout){\n            this.props.auth.logout();\n        }\n    }\n    render(){\n        if(this.props.auth.email===\"\"){\n            return(\n                <header className=\"d-flex bg-dark align-items-center\">\n                    <Link to=\"/\" className=\"col-sm-11 p-2 text-danger\"><h1 >Adventure!</h1></Link>\n                    <Link to=\"/login\" className=\"col-sm-1 align-items-ccenter\"><h4>Login<IoIosLogIn/></h4></Link>\n                </header>\n            )                \n        }else{\n            return(\n                <header className=\"d-flex bg-dark align-items-center\">\n                    <Link to=\"/\" className=\"col-sm-10 p-2 text-danger\"><h1 >Adventure!</h1></Link>\n                    <Link to=\"/login\" className=\"col-sm-2 align-items-ccenter\"><h4 onClick={this.onClickLogout}>Logout<IoIosLogOut/></h4></Link>\n                </header>\n            )                \n        }\n    }\n}\n\ninterface IHeaderState{\n\n}\n","import React from 'react';\nimport Header from '../Header/Header';\nimport './Page.css';\nimport {IAuth} from '../Common/Interfaces/Interfaces';\n\n\nexport default (props: React.PropsWithChildren<IAuth>)=>{\n    return(\n        <section className=\"fill\">\n            <Header auth={props.auth}></Header>\n            <main className=\"d-flex align-items-center justify-content-center\">\n                {props.children}\n            </main>\n        </section>\n    )\n}","import React, {Component} from 'react';\nimport Page from '../../Page';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {IAuth} from '../../../Common/Interfaces/Interfaces';\nimport {removeLocalStorage } from '../../../Utilities/Utilities';\nimport { Redirect } from 'react-router-dom';\n\nexport default class Login extends Component<IAuth, IHomeState>{\n    constructor(props: IAuth){\n        super(props);\n        this.state={\n            redirect: false,\n            redirectTo: ''\n        }\n    }\n    onClickBtn = (e: React.MouseEvent<HTMLButtonElement>)=>{\n        if(this.props.auth.email){\n            alert(\"Welcome back \"+this.props.auth.name);\n            this.setState({\n                redirect: true,\n                redirectTo: '/game'\n            })\n        }else{\n            alert(\"To play you need a character first\");\n            this.setState({\n                redirect: true,\n                redirectTo: '/login'\n            })\n        }\n    }\n    render(){\n        removeLocalStorage(\"potentialEmail\");\n        if(this.state.redirect){\n            const dir:string = (this.state.redirectTo||'/');\n            return (<Redirect to={dir} />);\n        }\n        return(\n            <Page auth={this.props.auth}>\n                <div className=\"container\">\n                    <button \n                        className=\"btn btn-danger col-sm-12\"\n                        onClick={this.onClickBtn}\n                    >\n                        PLAY\n                    </button>\n                </div>\n            </Page>\n        )\n    \n    }\n}\ninterface IHomeState{\n    redirect: boolean;\n    redirectTo: string;\n}","export const emailRegex = /^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$/;\nexport const badEmail = /^\\w{1,3}@\\w{1,3}.\\w{1,3}$/\nexport const emptyRegex = /^\\s?$/;\nexport const badNames = /^([a-zA-Z]){0,}([a-zA-Z])\\1{1,}([a-zA-Z]){0,}$/\nexport const allMoves = /^(forward|front|ahead|north|backward|back|behind|south|left|west|right|east)$/\n","import React from 'react';\nimport './Input.css'\ninterface IInputProps{\n    name: string, \n    value: string, \n    type: string, \n    caption?: string, \n    onChange?: any, \n    error?: object, \n    className: string,\n    placeholder: string\n    keyDown?:any\n}\n\nexport default (props: React.PropsWithChildren<IInputProps>)=>{\n    if(props.error && props.caption){\n        return(\n            <fieldset>\n                <legend className=\"main-color\">{props.caption}</legend>\n                <br/>\n                <input type={props.type||\"text\"} name={props.name} \n                id={props.name} value={props.value} className={props.error ? props.className+' error': props.className}\n                onChange={(props.onChange || ((e)=>false))} placeholder={props.placeholder} \n                onKeyDown={(props.keyDown || ((e)=>false))}\n                />\n                <br/>\n                <br/>\n                {(props.error && true) ? (<span className=\"center orange font-weight-bold\">{props.error}</span>) : null}\n            </fieldset>\n        );    \n    }else if(props.error && !props.caption){\n        return(\n            <fieldset>\n                <input type={props.type||\"text\"} name={props.name} \n                id={props.name} value={props.value} className={props.error ? props.className+' error': props.className}\n                onChange={(props.onChange || ((e)=>false))} placeholder={props.placeholder} \n                onKeyDown={(props.keyDown || ((e)=>false))}\n                />\n                <br/>\n                <br/>\n                {(props.error && true) ? (<span className=\"center orange font-weight-bold\">{props.error}</span>) : null}\n            </fieldset>\n        );\n    }else if(!props.error && props.caption){\n        return(\n            <fieldset>\n                <legend className=\"main-color\">{props.caption}</legend>\n                <br/>\n                <input type={props.type||\"text\"} name={props.name} \n                id={props.name} value={props.value} className={props.error ? props.className+' error': props.className}\n                onChange={(props.onChange || ((e)=>false))} placeholder={props.placeholder}\n                onKeyDown={(props.keyDown || ((e)=>false))}\n                />\n            </fieldset>\n        );\n    }else{\n        return(\n            <fieldset>\n                <input type={props.type||\"text\"} name={props.name} \n                id={props.name} value={props.value} className={props.error ? props.className+' error': props.className}\n                onChange={(props.onChange || ((e)=>false))} placeholder={props.placeholder}\n                onKeyDown={(props.keyDown || ((e)=>false))}\n                />\n            </fieldset>\n        );    \n    }\n}\n","import React, {Component} from 'react';\nimport Page from '../../Page';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {emailRegex, emptyRegex, badEmail} from '../../../Common/Validators/Validators';\nimport Input from '../../../Common/Input/Input';\nimport { naxios, removeLocalStorage, setLocalStorage} from '../../../Utilities/Utilities';\nimport { IAuth } from '../../../Common/Interfaces/Interfaces';\nimport { Redirect } from 'react-router-dom';\n\nexport default class Login extends Component<IAuth, ILoginState>{\n    constructor(props: IAuth){\n        super(props);\n        this.state={\n            email:'',\n            emailError: [],\n            redirect: false,\n            redirectTo: '',\n        }\n    }\n    validate = (val:string)=>{\n        let nameErrors:object = {};\n        let tmpErrors:string[] = [];\n        const email:string = val;\n        if(email !== undefined){\n            if((!(emailRegex.test(email)))||(emptyRegex.test(email))){\n                tmpErrors.push(\"Please type an email with a correct format\");\n            }\n            nameErrors = Object.assign({}, nameErrors,  {emailError: tmpErrors});\n        }\n\n        return nameErrors;\n    }\n    onChangeText = (e: React.ChangeEvent<HTMLInputElement>)=>{\n        const {name, value} = e.currentTarget;\n        let errors:object = this.validate(value);\n        let str:string = \"emailError\";\n        if(this.state.emailError.length){\n            this.setState({\n                ...this.state,\n                [name]:value,\n                [str]:''\n            });\n        }\n        this.setState({\n            ...this.state,\n            [name]:value,\n            ...errors\n        });\n    }\n    onClickBtn = (e: React.MouseEvent<HTMLButtonElement>)=>{\n        e.preventDefault();\n        e.stopPropagation();\n        let value = this.state.email;\n        let errors:object = this.validate(value);\n        if(this.state.emailError.length || value===''){\n            this.setState({...this.state, ...errors});\n        }else{\n            if(\n                badEmail.test(this.state.email)||\n                this.state.email === \"test@test.test\"||\n                this.state.email === \"test@test.com\"||\n                this.state.email === \"demo@demo.demo\"||\n                this.state.email === \"demo@demo.com\"\n                \n            ){\n                alert(\"Please use a reasonable email address\")\n            }\n            else if(this.state.email === \"easter@egg.com\"){\n                alert(\"Easter Egg found! Congratulations!\");\n            }else{\n                const email = this.state.email;\n                naxios.get(\n                    `/api/user/myUser/${email}`\n                )\n                .then(\n                    ({data})=>{\n                        if(data===null || data ===undefined){\n                            alert(\"The user doesn't exist. Redirecting toward creating a new user\");\n                            this.setState({\n                                ...this.state,\n                                redirect: true,\n                                redirectTo: '/new'\n                            },()=>{\n                                setLocalStorage(\"potentialEmail\",this.state.email);\n                            })\n                        }else if(!data.userActive){\n                            alert(\"Your user has been deactivated. Have a great day\");\n                        }\n                        else{\n                            if(this.props.login){\n                                this.props.login(data.userName, data.userEmail);\n                                this.setState({\n                                    ...this.state,\n                                    redirect: true,\n                                    redirectTo: '/'\n                                })    \n                            }\n                        }\n                    }\n                )\n                .catch(\n                    (err)=>{\n                        console.log(err); \n                    }\n                )\n            }\n        }\n    }\n    render(){\n        removeLocalStorage(\"potentialEmail\");\n        if(this.state.redirect){\n            const dir:string = (this.state.redirectTo||'/');\n            return (<Redirect to={dir} />);\n        }\n        return(\n            <Page auth={this.props.auth}>\n                <div className=\"container\">\n                    <Input \n                        type=\"text\" \n                        className=\"form-control bg-transparent text-white\" \n                        caption=\"Email\"\n                        placeholder=\"Enter your email\"\n                        name=\"email\"\n                        error={this.state.emailError}                        \n                        value={this.state.email}\n                        onChange={this.onChangeText}\n                    />\n                    <button \n                        className=\"col-sm-12 btn-secondary\" \n                        onClick={this.onClickBtn}\n                    >\n                        Log In\n                    </button>\n                </div>\n            </Page>\n        )\n    }\n}\n\ninterface ILoginState{\n    email: string;\n    emailError: string[];\n    redirect: boolean;\n    redirectTo: string;\n}\n","import React, { Component } from 'react';\nimport Page from '../../Page';\nimport Input from '../../../Common/Input/Input';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { IAuth } from '../../../Common/Interfaces/Interfaces';\nimport { getLocalStorage, naxios } from '../../../Utilities/Utilities';\nimport { Redirect } from 'react-router-dom';\nimport { badNames, emptyRegex } from '../../../Common/Validators/Validators';\n\nexport default class New extends Component<IAuth, INewState>{\n    constructor(props:IAuth){\n        super(props);\n        this.state={\n            name: '',\n            nameError: [],\n            redirect: false,\n            redirectTo: '/'\n        }\n    }\n    validate = (val:string)=>{\n        let nameErrors:object = {};\n        let tmpErrors:string[] = [];\n        const name:string = val;\n        if(name !== undefined){\n            if((!(badNames.test(name)))||(emptyRegex.test(name))||name.length<=1){\n                tmpErrors.push(\"Please type a real name longer than a letter\");\n            }\n            nameErrors = Object.assign({}, nameErrors,  {nameError: tmpErrors});\n        }\n        return nameErrors;\n    }\n    onChangeText = (e: React.ChangeEvent<HTMLInputElement>)=>{\n        const {name,value} = e.currentTarget;\n        let errors:object = this.validate(value);\n        this.setState({\n            ...this.state,\n            [name]:value,\n            ...errors\n        });\n    }\n    onClickBtn=(e:React.MouseEvent<HTMLButtonElement>)=>{\n        const name = this.state.name;\n        let errors:object = this.validate(name);\n        if(this.state.nameError.length || name===''){\n            alert(\"Please type a real name longer than a letter\");\n            this.setState({...this.state, ...errors});\n        }else if(getLocalStorage(\"potentialEmail\")){\n            const email:string|null = getLocalStorage(\"potentialEmail\");\n            naxios.get(\n                `/api/user/myUser/${email}`\n            )\n            .then(\n                ({data})=>{\n                    if(data){\n                        alert(\"A user already exists with that email. Please don't tamper with the settings\");\n                    }else{\n                        naxios.post(\n                            `api/user/new`,\n                            {\n                                name: this.state.name,\n                                email: email\n                            }\n                        )\n                        .then(\n                            ({data})=>{\n                                alert(\"Your character has been created. Let's start this story...\");\n                                this.setState({\n                                    redirect: true,\n                                    redirectTo: '/game'\n                                })\n                            }\n                        )\n                        .catch(\n                            (err)=>{\n                                console.log(err);\n                            }\n                        )\n                    }\n                }\n            )\n            .catch(\n                (err)=>{\n                    console.log(err);\n                }\n            )\n        }else{\n            alert(\"You got no email address for your new character... Redirecting to assignin one\");\n            this.setState({\n                redirect: true,\n                redirectTo: \"/login\"\n            });\n        }\n    }\n    render(){\n        if(this.state.redirect){\n            const dir:string = (this.state.redirectTo||'/');\n            return (<Redirect to={dir} />);\n        }\n        return(\n            <Page auth={this.props.auth}>\n                <div className=\"container\">\n                    <Input\n                        type=\"text\" \n                        className=\"form-control bg-transparent text-white\" \n                        caption=\"Name\"\n                        placeholder=\"Enter your character's name\"\n                        name=\"name\"\n                        error={this.state.nameError}              \n                        value={this.state.name}\n                        onChange={this.onChangeText}\n                    >\n                    </Input>\n                    <button \n                        className=\"col-sm-12 btn-secondary\" \n                        onClick={this.onClickBtn}\n                    >\n                        Start Game!\n                    </button>\n                </div>\n            </Page>\n        )\n    }\n}\ninterface INewState{\n    name: string;\n    nameError: string[];\n    redirect: boolean;\n    redirectTo: string;\n}\n","import React, { Component } from 'react';\nimport Page from '../../Page';\nimport { IAuth } from '../../../Common/Interfaces/Interfaces';\nimport './Game.css';\nimport { getLocalStorage, saxios } from '../../../Utilities/Utilities';\nimport { Redirect } from 'react-router-dom';\nimport Input from '../../../Common/Input/Input';\nimport { ObjectID } from 'mongodb';\nimport { IoIosReturnLeft } from 'react-icons/io';\nimport { allMoves } from '../../../Common/Validators/Validators';\n\nexport default class Game extends Component<IAuth, IGameState>{\n    constructor(props: IAuth){\n        super(props);\n        this.state={\n            command: \"\",\n            name: (getLocalStorage(\"name\")||\"AAAAA\"),\n            allText: [],\n            user: {\n                _id:\"\",\n                userCurrentRoom: \"\",\n                userInventory: [],\n                userLeftEquip: {\n                    objectName: \"\",\n                    objectType: \"\",\n                    objectValue: 0,\n                    objectWeight: 0\n                },\n                userRightEquip: {\n                    objectName: \"\",\n                    objectType: \"\",\n                    objectValue: 0,\n                    objectWeight: 0\n                },\n                userBaseHealth:0,\n                userRealHealth:0,\n                userAtk:0\n            },\n            room: {\n                roomName: \"\",\n                roomEnter: \"\",\n                roomEnterEnemy: \"\",\n                roomLook: \"\",\n                roomLeft: \"\",\n                roomRight: \"\",\n                roomForward: \"\",\n                roomBackward: \"\",\n                roomObjectsInv: [],\n                roomObjectsEnv: [],\n                roomEnemy: {\n                    enemyName: \"\",\n                    enemyATK: 0,\n                    enemyWeapon:{\n                        objectName: \"\",\n                        objectType: \"\",\n                        objectValue: 0,\n                        objectWeight: 0\n                    },\n                    enemyDesc: \"\",\n                },\n                roomEnemyHealth: 1,\n                roomEnemyAlive: false,\n                roomLeftBool: false,\n                roomRightBool: false,\n                roomForwardBool: false,\n                roomBackwardBool: false\n            },\n            allInventory: [],\n            allV: [],\n            msg: \"\",\n        }\n    }\n    componentDidMount(){\n        if(this.state.name===\"AAAAA\"){\n            alert(\"An error has ocurred. Please log in again\");\n            return(<Redirect to=\"/login\"/>);\n        }\n        let email:string|null = (getLocalStorage(\"email\")||\"AAAAA\");\n        saxios.get(\n            `/api/user/myUser/${email}`\n        )\n        .then(\n            ({data})=>{\n                this.setState({\n                    user: data,\n                    msg: \"\",\n                    allText: data.userCommands\n                },()=>{\n                    if(this.state.user.userRealHealth<=0){\n                        alert(\"You died. Restarting from the beginning...\");\n                        saxios.put(\n                            `/api/user/death`,\n                            {\n                                name: this.state.name\n                            }\n                        )\n                        .then(\n                            ({data})=>{\n                                alert(data.msg);\n                                this.componentDidMount();\n                            }\n                        )\n                        .catch(\n                            (err)=>{\n                                console.log(err);\n                            }\n                        )\n                    }else{\n                        saxios.get(`/api/user/currentRoom/${this.state.user._id}/${this.state.user.userCurrentRoom}`)\n                        .then(\n                            ({data})=>{\n                                let aside = document.getElementById(\"aside\") as HTMLElement;\n                                aside.scrollTop = aside.scrollHeight;\n                                this.setState({\n                                    room: data\n                                },()=>{\n                                    const words:string[] = this.state.allText[this.state.allText.length-1].split(\" \");\n                                    if(allMoves.test(words[1])){\n                                        if(this.state.room.roomEnemyAlive){\n                                            this.state.allText.push(`${this.state.room.roomEnterEnemy}`);\n                                            this.addAndSetState();\n                                        }else{\n                                            this.state.allText.push(`${this.state.room.roomEnter}`);\n                                            this.addAndSetState();\n                                        }\n                                    }\n                                });\n                            }\n                        )\n                        .catch(\n                            (err)=>{\n                                console.log(err);  \n                            }\n                        )    \n                    }\n                })\n            }\n        )\n        .catch(\n            (err)=>{\n                console.log(err);\n            }\n        )\n        saxios.get(\n            `/api/user/allInvObjects`\n        )\n        .then(\n            ({data})=>{\n                this.setState({\n                    allInventory: data\n                })\n            }\n        )\n        .catch(\n            (err)=>{\n                console.log(err);\n            }\n        )\n        saxios.get(`api/user/allVerbs`)\n        .then(\n            ({data})=>{\n                this.setState({\n                    allV: data\n                })\n            }\n        )\n        .catch(\n            (err)=>{\n                console.log(err);\n            }\n        )\n    }\n    onChangeText = (e: React.ChangeEvent<HTMLInputElement>)=>{\n        const {name, value} = e.currentTarget;\n        this.setState({\n            ...this.state,\n            [name]:value,\n        });\n    }\n    addAndSetState = () =>{\n        let emailS:string|null = (getLocalStorage(\"email\")||\"AAAAA\");\n        saxios.put(\n            `/api/user/addCommand`,\n            {\n                email: emailS,\n                commands: this.state.allText\n            }\n        )\n        this.setState({\n            command: \"\"\n        },()=>{\n            let aside = document.getElementById(\"aside\") as HTMLElement;\n            aside.scrollTop = aside.scrollHeight;\n        });\n        this.componentDidMount();\n    }\n    getHit = (newHP:number) =>{\n        let user:IUser = this.state.user;\n        this.setState({\n            user:{\n                ...user,\n                userRealHealth: newHP,\n            }\n        },()=>{\n            saxios.put(\n                `/api/user/getHit`,\n                {\n                    userN: this.state.name,\n                    health: newHP\n                }\n            )\n            .then(\n                ({data})=>{\n                    this.addAndSetState();\n                }\n            )\n            .catch(\n                (err)=>{\n                    console.log(err);\n                }\n            )    \n        })\n    }\n    hitEnemy=(remainingHealth:number)=>{\n            saxios.put(\n                `/api/user/hitEnemy`,\n                {\n                    userN: this.state.name,\n                    roomN: this.state.room.roomName,\n                    newHP: remainingHealth,\n                }\n            )\n            .then(\n                ({data})=>{\n                    this.addAndSetState();\n                }\n            )\n            .catch(\n                (err)=>{\n                    console.log(err);\n                }\n            )    \n\n    }\n    killEnemy = () =>{\n        let room:IRoom = this.state.room;\n        this.setState({\n            room:{\n                ...room,\n                roomEnemyAlive:false,\n            }\n        },()=>{\n            saxios.put(\n                `/api/user/killedEnemy`,\n                {\n                    userN: this.state.name,\n                    roomN: this.state.room.roomName,\n                }\n            )\n            .then(\n                ({data})=>{\n                    saxios.get(\n                        `/api/user/allChestRoom`\n                    )\n                    .then(\n                        ({data})=>{\n                            for(let a:number=0;a<data.length;a++){\n                                if(data[a].roomID===this.state.user.userCurrentRoom){\n                                    let chestName:string = data[a].chest.objectName;\n                                    saxios.put(\n                                        `/api/user/addChestToRoom`,\n                                        {\n                                            uName: this.state.name, \n                                            currentRName: this.state.room.roomName, \n                                            chest: data[a].chest\n                                        }\n                                    )\n                                    .then(\n                                        ({data})=>{\n                                            this.state.allText.push(`As the enemy vanishes into thin air, a chest appears out of nowhere.\n                                            The chest has an inscription that says \"${chestName}\".\n                                            With the chest being closed, you'll need to open it to reveal its contents`);\n                                            this.addAndSetState();\n                                        }\n                                    )\n                                    .catch(\n                                        (err)=>{\n                                            console.log(err);\n                                        }\n                                    )\n                                }\n                            }\n                        }\n                    )\n                    .catch(\n                        (err)=>{\n                            console.log(err);\n                        }\n                    )\n                }\n            )\n            .catch(\n                (err)=>{\n                    console.log(err);\n                }\n            )    \n        })\n    }\n    directionAttack = (dir:string, h:number) =>{\n        let direction:IEquip = {\n            objectName: \"\",\n            objectType: \"\",\n            objectValue: 0,\n            objectWeight: 0\n        };\n\n        if(dir===\"left\"){\n            direction = this.state.user.userLeftEquip;\n        }else{\n            direction = this.state.user.userRightEquip;\n        }\n        let enemy:IEnemy = this.state.room.roomEnemy;\n        let me:IUser = this.state.user;\n        let room:IRoom = this.state.room;\n        this.state.allText.push(`You attacked with a ${direction.objectName}, dealing ${me.userAtk+direction.objectValue} damage`);\n        let remainingHealth:number = (h - (me.userAtk+direction.objectValue));\n        //Subtract from enemy\n        this.hitEnemy(remainingHealth);\n        this.setState({\n            room:{\n                ...room,\n                roomEnemyHealth:remainingHealth\n            }\n        },()=>{\n            if(remainingHealth<=0){\n                this.state.allText.push(`${enemy.enemyName} died...`)\n                //change roomEnemyAlive a false\n                this.killEnemy();\n            }\n        });\n        return remainingHealth;\n    }\n    enemyAttack = (dir:string) =>{\n        let direction:IEquip = {\n            objectName: \"\",\n            objectType: \"\",\n            objectValue: 0,\n            objectWeight: 0\n        };\n        if(dir===\"left\"){\n            direction = this.state.user.userLeftEquip;\n        }else{\n            direction = this.state.user.userRightEquip;\n        }\n        let enemy:IEnemy = this.state.room.roomEnemy;\n        let me:IUser = this.state.user;\n        let rslt:number=0;\n        if(direction.objectValue>=(enemy.enemyATK+enemy.enemyWeapon.objectValue)){\n            rslt=0;\n        }else{\n            rslt=(direction.objectValue-(enemy.enemyATK+enemy.enemyWeapon.objectValue));\n        }\n        this.state.allText.push(`${enemy.enemyName} attacked with ${enemy.enemyWeapon.objectName}, \n        dealing ${enemy.enemyATK+enemy.enemyWeapon.objectValue} damage, but with your ${direction.objectName},\n        you reduced the damage to ${rslt}`);\n        //subtract from you (using rslt)\n        let remainingHealth:number = (me.userRealHealth-(enemy.enemyATK+enemy.enemyWeapon.objectValue));\n        this.getHit(remainingHealth);\n        if(me.userRealHealth<=0){\n            //Take to kill code(Which is at the end, because it checks for death every didMount)\n            return false;\n        }\n        return true;\n    }\n    attackSequence = ()=>{\n        let left:IEquip = this.state.user.userLeftEquip;\n        let right:IEquip = this.state.user.userRightEquip;\n        let enemy:IEnemy = this.state.room.roomEnemy;\n        let me:IUser = this.state.user;\n        let room:IRoom = this.state.room;\n        if(left.objectType===\"ATK\"){\n            if(right.objectType===\"ATK\"){\n                if(left.objectWeight<=enemy.enemyWeapon.objectWeight){\n                    if(left.objectWeight+right.objectWeight<=enemy.enemyWeapon.objectWeight){\n                        this.state.allText.push(`You attacked with the ${left.objectName} followed by ${right.objectName},\n                        making a total of ${me.userAtk*(left.objectValue+right.objectValue)}`);\n                        //Subtract from enemy\n                        let remainingHealth:number = (room.roomEnemyHealth - (me.userAtk*(left.objectValue+right.objectValue)));\n                        this.hitEnemy(remainingHealth);\n                        if((room.roomEnemyHealth-(me.userAtk*(left.objectValue+right.objectValue)))>0){\n                            this.state.allText.push(`${enemy.enemyName} attacked with ${enemy.enemyWeapon.objectName}, \n                            dealing ${enemy.enemyATK+enemy.enemyWeapon.objectValue} damage`);\n                           //subtract from you\n                           let myNewHP = (me.userRealHealth - (enemy.enemyATK+enemy.enemyWeapon.objectValue));\n                           this.getHit(myNewHP);\n                        }else{\n                            this.state.allText.push(`${enemy.enemyName} died...`);\n                            this.killEnemy();\n                        }\n                    }else{\n                        let h:number = this.directionAttack(\"left\", this.state.room.roomEnemyHealth);\n                        if(h>0){\n                            this.state.allText.push(`${enemy.enemyName} attacked with ${enemy.enemyWeapon.objectName}, \n                            dealing ${enemy.enemyATK+enemy.enemyWeapon.objectValue} damage`);\n                            //subtract from you\n                            let myNewHP = (me.userRealHealth - (enemy.enemyATK+enemy.enemyWeapon.objectValue));\n                            this.getHit(myNewHP);\n                            if(me.userRealHealth>0){\n                                this.directionAttack(\"right\", h);\n                            }\n                        }\n                    }\n                }else if(right.objectWeight<=enemy.enemyWeapon.objectWeight){\n                    let h:number = this.directionAttack(\"right\", this.state.room.roomEnemyHealth);\n                    if(h>0){\n                        this.state.allText.push(`${enemy.enemyName} attacked with ${enemy.enemyWeapon.objectName}, \n                        dealing ${enemy.enemyATK+enemy.enemyWeapon.objectValue} damage`);\n                        //subtract from you\n                        let myNewHP = (me.userRealHealth - (enemy.enemyATK+enemy.enemyWeapon.objectValue));\n                        this.getHit(myNewHP);\n                        if(me.userRealHealth>0){\n                            this.directionAttack(\"left\", h)\n                        }\n                    }\n                }else{\n                    this.state.allText.push(`${enemy.enemyName} attacked with ${enemy.enemyWeapon.objectName}, \n                    dealing ${enemy.enemyATK+enemy.enemyWeapon.objectValue} damage`);\n                    //subtract from you\n                    let myNewHP = (me.userRealHealth - (enemy.enemyATK+enemy.enemyWeapon.objectValue));\n                    this.getHit(myNewHP);\n                    if(me.userRealHealth>0){\n                        this.state.allText.push(`You attacked with the ${left.objectName} followed by ${right.objectName},\n                        making a total of ${me.userAtk*(left.objectValue+right.objectValue)}`);\n                        //Subtract from enemy\n                        let remainingHealth:number = (room.roomEnemyHealth - (me.userAtk*(left.objectValue+right.objectValue)));\n                        this.hitEnemy(remainingHealth);\n                        if((room.roomEnemyHealth-(me.userAtk*(left.objectValue+right.objectValue)))<=0){\n                            this.state.allText.push(`${enemy.enemyName} died...`);\n                            this.killEnemy();\n                        }\n                    }\n                }\n            }else{\n                if(right.objectWeight+left.objectWeight <= enemy.enemyWeapon.objectWeight){\n                    if(this.directionAttack(\"left\", this.state.room.roomEnemyHealth)>0){\n                        this.enemyAttack(\"right\");\n                    }\n                }else{\n                    if(this.enemyAttack(\"right\")){\n                        this.directionAttack(\"left\", this.state.room.roomEnemyHealth);\n                    }\n                }\n            }\n        }else if(right.objectType===\"ATK\"){\n            if(right.objectWeight+left.objectWeight <= enemy.enemyWeapon.objectWeight){\n                if(this.directionAttack(\"right\", this.state.room.roomEnemyHealth)>0){\n                    this.enemyAttack(\"left\");\n                }\n            }else{\n                if(this.enemyAttack(\"left\")){\n                    this.directionAttack(\"right\", this.state.room.roomEnemyHealth);\n                }   \n            }\n        }else{\n            this.state.allText.push(`You have nothing to attack with, try equipping a useful weapon`);\n        }\n        this.addAndSetState();\n    }\n    checkIfKey = (words:string[])=>{\n        if((words[2]===\"door\" || words[2]===\"doors\") && words[0]===\"open\"){\n            let obj:string = words[1].charAt(0).toUpperCase()+words[1].slice(1)+\" Key\";\n            for (let x:number=0;x<this.state.user.userInventory.length;x++){\n                if(this.state.user.userInventory[x].objectName===obj){\n                    return true;\n                }\n            }\n            return false;\n        }\n    }\n    changeRoom=(room:ObjectID|string)=>{\n        saxios.put(\n            `/api/user/changeRoom`,\n            {\n                uName: this.state.name,\n                roomID: room\n            }\n        )\n        .then(\n            ({data})=>{\n                this.addAndSetState();\n            }\n        )\n        .catch(\n            (err)=>{\n                console.log(err);\n            }\n        )\n    }\n    mainGameCode = ()=>{\n        this.state.allText.push(this.state.command);\n        let lower:string = this.state.command.toLowerCase();\n        const words:string[] = lower.split(\" \");\n        let realWords:string[] = [];\n        words.forEach((word)=>{\n            if(word!==\"\"){\n                realWords.push(word);\n            }\n        });\n\n        let objectText:string = \"\";//for comparing with lower case\n        let objectTextUpC:string = \"\";//for comparing with first letter upper case\n\n        if(realWords.length!==1){\n            if(realWords[2]!==undefined){\n                objectText = realWords[1]+\" \"+realWords[2];\n                objectTextUpC = realWords[1].charAt(0).toUpperCase()+realWords[1].slice(1)+\" \"+realWords[2].charAt(0).toUpperCase()+realWords[2].slice(1);\n            }else{\n                objectText = realWords[1];\n                objectTextUpC = realWords[1].charAt(0).toUpperCase()+realWords[1].slice(1); \n            }        \n        }\n\n        let printed:boolean = false;//to see if it has already printed something or not\n\n        //Special case for Equip and Unequip\n        let direction:string = \"AAAAAAAAAA\";\n        let errorEquipUnequip:boolean = false;\n        if(realWords[0]===\"equip\"){\n            if(realWords.length===4){\n                if(realWords[1]===\"left\" || realWords[1]===\"left-hand\"){  \n                    direction=\"left\";\n                    objectText = realWords[2]+\" \"+realWords[3];\n                    objectTextUpC = realWords[2].charAt(0).toUpperCase()+realWords[2].slice(1)+\" \"+realWords[3].charAt(0).toUpperCase()+realWords[3].slice(1);\n                }\n                if(realWords[1]===\"right\" || realWords[1]===\"right-hand\"){\n                    direction=\"right\";\n                    objectText = realWords[2]+\" \"+realWords[3];\n                    objectTextUpC = realWords[2].charAt(0).toUpperCase()+realWords[2].slice(1)+\" \"+realWords[3].charAt(0).toUpperCase()+realWords[3].slice(1);\n                }\n                if(realWords[3]===\"left\" || realWords[3]===\"left-hand\"){ \n                    direction=\"left\";\n                }\n                if(realWords[3]===\"right\" || realWords[3]===\"right-hand\"){\n                    direction=\"right\";\n                }\n            }else if(realWords.length===5){\n                if(realWords[1]===\"left\" && realWords[2]===\"hand\"){ \n                    direction=\"left\";\n                    objectText = realWords[3]+\" \"+realWords[4];\n                    objectTextUpC = realWords[3].charAt(0).toUpperCase()+realWords[3].slice(1)+\" \"+realWords[4].charAt(0).toUpperCase()+realWords[4].slice(1);\n                }\n                if(realWords[1]===\"right\" && realWords[2]===\"hand\"){\n                    direction=\"right\";\n                    objectText = realWords[3]+\" \"+realWords[4];\n                    objectTextUpC = realWords[3].charAt(0).toUpperCase()+realWords[3].slice(1)+\" \"+realWords[4].charAt(0).toUpperCase()+realWords[4].slice(1);\n                }\n                if(realWords[3]===\"left\" && realWords[4]===\"hand\"){ \n                    direction=\"left\";\n                }\n                if(realWords[3]===\"right\" && realWords[4]===\"hand\"){\n                    direction=\"right\";\n                }\n            }else{\n                this.state.allText.push(`The correct way to equip an object is:\n                \"equip\" followed by the object and finally the direction of the hand you want to equip it (left or right)`);\n                errorEquipUnequip=true;\n            }\n        }\n        if(realWords[0]===\"unequip\"){\n            if(realWords.length===2){\n                if(realWords[1]===\"left\" || realWords[1]===\"left-hand\"){\n                    direction=\"left\"; \n                }\n                if(realWords[1]===\"right\" || realWords[1]===\"right-hand\"){\n                    direction=\"right\"; \n                }\n            }else if(realWords.length===3){\n                if(realWords[1]===\"left\" && realWords[2]===\"hand\"){\n                    direction=\"left\";\n                    objectText=\"\";\n                    objectTextUpC=\"\";\n                }\n                if(realWords[1]===\"right\" && realWords[2]===\"hand\"){\n                    direction=\"right\";\n                    objectText=\"\";\n                    objectTextUpC=\"\";\n                }\n            }else if(realWords.length===4){\n                if(realWords[1]===\"left\" || realWords[1]===\"left-hand\"){ \n                    direction=\"left\";\n                    objectText = realWords[2]+\" \"+realWords[3];\n                    objectTextUpC = realWords[2].charAt(0).toUpperCase()+realWords[2].slice(1)+\" \"+realWords[3].charAt(0).toUpperCase()+realWords[3].slice(1);\n                }\n                if(realWords[1]===\"right\" || realWords[1]===\"right-hand\"){ \n                    direction=\"right\";\n                    objectText = realWords[2]+\" \"+realWords[3];\n                    objectTextUpC = realWords[2].charAt(0).toUpperCase()+realWords[2].slice(1)+\" \"+realWords[3].charAt(0).toUpperCase()+realWords[3].slice(1);\n                }\n                if(realWords[3]===\"left\" || realWords[3]===\"left-hand\"){\n                    direction=\"left\";\n                }\n                if(realWords[3]===\"right\" || realWords[3]===\"right-hand\"){\n                    direction=\"right\";\n                }\n            }else if(realWords.length===5){\n                if(realWords[1]===\"left\" && realWords[2]===\"hand\"){ \n                    direction=\"left\";\n                    objectText = realWords[3]+\" \"+realWords[4];\n                    objectTextUpC = realWords[3].charAt(0).toUpperCase()+realWords[3].slice(1)+\" \"+realWords[4].charAt(0).toUpperCase()+realWords[4].slice(1);\n                }\n                if(realWords[1]===\"right\" && realWords[2]===\"hand\"){ \n                    direction=\"right\";\n                    objectText = realWords[3]+\" \"+realWords[4];\n                    objectTextUpC = realWords[3].charAt(0).toUpperCase()+realWords[3].slice(1)+\" \"+realWords[4].charAt(0).toUpperCase()+realWords[4].slice(1);\n                }\n                if(realWords[3]===\"left\" && realWords[4]===\"hand\"){\n                    direction=\"left\";\n                }\n                if(realWords[3]===\"right\" && realWords[4]===\"hand\"){\n                    direction=\"right\"\n                }\n            }else{\n                this.state.allText.push(`The correct way to unequip an object is:\n                \"unequip\" followed by the object and finally the direction of the hand you want to unequip it (left or right)`);\n                errorEquipUnequip=true;\n            }\n        }\n        //End special case\n\n        if((realWords[0]===\"help\" || realWords[0]===\"hint\") && realWords.length===1){\n            if(this.state.room.roomEnemyAlive){\n                this.state.allText.push(`You're in a battle! Its his life or yours. Don't be reckless, if you die, I die as well.\n                You can equip some items from your inventory to fight. Once you decide to attack, just type \"attack\". As a famous\n                general once said: \"Good luck\".`);\n            }else{\n                this.state.allText.push(`Help is on its way. You have various ways of interacting with the world around you.\n                Just as you just used the verb \"help\", you can use other verbs to make this world change.\n                For instance, if you want to move, you type \"move\" and a direction. \n                If you want to grab something, type \"grab\" followed by the object you want to try and grab.\n                If you want to get more knowledge of other verbs, type \"help\" followed by the verb you want to know more about.\n                If you want to look at your surroundings, type \"look\".\n                In the spirit of encouraging exploration, try different verbs and see their effects!...\n                But... If you want a list of all verbs available, type \"verb list\"`);    \n            }\n        }else if((realWords[0]===\"exit\" || realWords[0]===\"close\") && realWords.length===1){\n            this.state.allText.push(`Your progress is automatically saved every command you make.\n            If you want to exit, just press Logout or Adventure at the top of your screen`);\n        }\n        else if(realWords[0]===\"eat\"){\n            this.state.allText.push(`Rather than eating a questionable item, I implore you to \"use\" it. For your (and my) health.`);\n        }\n        else if(realWords[0]===\"inventory\"){\n            let uInv:string[] = [];\n            for(let a:number=0;a<this.state.user.userInventory.length;a++){\n                uInv.push(this.state.user.userInventory[a].objectName);\n            }\n            this.state.allText.push(`Your current inventory is: ${uInv}`);\n        }\n        else if(realWords[0]===\"status\"){\n            this.state.allText.push(`Your current health is: ${this.state.user.userRealHealth}/${this.state.user.userBaseHealth}.\n            In your left hand a(an): ${this.state.user.userLeftEquip.objectName}. In your right hand you have a(an): ${this.state.user.userRightEquip.objectName}`);\n        }\n        else if(realWords[0]===\"look\" || realWords[0]===\"observe\"){\n            let uInv:string[] = [];\n            for(let a:number=0;a<this.state.room.roomObjectsInv.length;a++){\n                uInv.push(this.state.room.roomObjectsInv[a].objectName);\n            }\n            if(uInv.length===0){\n                    this.state.allText.push(`${this.state.room.roomLook}`);\n            }else{\n                    this.state.allText.push(`${this.state.room.roomLook}. In the room you can find: ${uInv}`); \n            }\n        }\n        else if((realWords[0]===\"attack\" || realWords[0]===\"kill\" || realWords[0]===\"damage\" || realWords[0]===\"hit\") && realWords.length>1){\n            this.state.allText.push(`If you wish to attack, just type \"${realWords[0]}\", the complicated maths of what to use \n            and whom to attack have been figured out by me, your conscience. (No need to praise, but some recognition isn't bad at all).`);\n        }\n        else if(realWords[0]===\"attack\" || realWords[0]===\"kill\" || realWords[0]===\"damage\" || realWords[0]===\"hit\"){\n            if(this.state.room.roomEnemyAlive){\n                this.attackSequence();\n            }else{\n                this.state.allText.push(`If there is no battle, there no need to ${realWords[0]} anything`);\n            }\n        }\n        else if((realWords[0]===\"thanks\" && realWords.length===1) || (realWords[0]===\"thank\" && realWords[1]===\"you\" && realWords.length===2)){\n            this.state.allText.push(`You're welcome. I'm glad to help. Also, its really gratifying to hear a compliment`);\n        }\n        else if(realWords[0]===\"restart\" || realWords[0]===\"reset\" || realWords[0]===\"suicide\" || (realWords[0]===\"kill\" && realWords[1]===\"me\")){\n            this.state.allText.push(`After thinking all of what you've been through, you decide its no longer worth it,\n            which means... you'll take your own life. As your conscience, I fear nothing, since I know a little secret. \n            But remember, it's a secret to everybody (And now I'm talking to you, player)(and yes, breaking forth wall, bla bla)\n            The little secret is that this world is constructed so that each time ${this.state.name} dies, \n            ${this.state.name} comes back alive. So please, enjoy replaying the adventure once more`);\n            this.getHit(-7);\n        }\n        else if(realWords.length===1){\n            this.state.allText.push(`You can't possibly think to \"${realWords[0]}\" without a something or a somewhere,\n            so please, after every verb, please choose an object to interact with`);\n        }\n        else if(realWords[0]===\"close\"){\n            this.state.allText.push(`There is no benefit in closing something, so why try and close it? Just... leave it as it is.`);\n        }\n        else if((realWords[0]===\"move\"  || realWords[0]===\"go\") && realWords.length>2){\n            this.state.allText.push(`If you want to try and move an object, please use pull or push, its more specific`);\n        }\n        else if((realWords[0]===\"open\") && realWords.length===2){            \n            this.state.allText.push(`There may be more than 1 object with that generic name, please be more specific with the object you interact with`)\n        }\n        else if(realWords[0]===\"verb\" && realWords[1]===\"list\" && realWords.length===2){\n            let verbs:string[] = [];\n            for (let a:number=0;a<this.state.allV.length;a++){\n                verbs.push((\" \"+this.state.allV[a].name));\n            }\n            this.state.allText.push(`All the actions you could possibly perform are the following: ${verbs}. \n            If you want an in-depth explanation of each one, type \"help\" followed by the verb you want more info about`)\n        }\n        else if(realWords[0]===\"move\" || realWords[0]===\"go\"){\n            let roomDecision:ObjectID|string = \"\";\n            if(realWords[1]===\"forward\" || realWords[1]===\"front\" ||  realWords[1]===\"ahead\" || realWords[1]===\"north\"){\n                if(this.state.room.roomForwardBool){\n                    if(this.state.room.roomEnemyAlive){\n                        this.state.allText.push(\"You can't run away from a battle\");\n                    }else{\n                        if(this.state.room.roomForward.toString().length>25){\n                            this.state.allText.push(`${this.state.room.roomForward}`);\n                        }else{\n                            roomDecision = this.state.room.roomForward;\n                            this.changeRoom(roomDecision);\n                        }\n                    }\n                }else{\n                    this.state.allText.push(\"Your path is blocked. Find a way get where you want\");\n                }\n            }else if(realWords[1]===\"backward\" || realWords[1]===\"back\" || realWords[1]===\"behind\" || realWords[1]===\"south\"){\n                if(this.state.room.roomBackwardBool){\n                    if(this.state.room.roomEnemyAlive){\n                        this.state.allText.push(\"You can't run away from a battle\");\n                    }else{\n                        if(this.state.room.roomBackward.toString().length>25){\n                            this.state.allText.push(`${this.state.room.roomBackward}`);\n                        }else{\n                            roomDecision = this.state.room.roomBackward;\n                            this.changeRoom(roomDecision);\n                        }\n                    }\n                }else{\n                    this.state.allText.push(\"Your path is blocked. Find a way get where you want\");\n                }\n            }else if(realWords[1]===\"left\" || realWords[1]===\"west\"){\n                if(this.state.room.roomLeftBool){\n                    if(this.state.room.roomEnemyAlive){\n                        this.state.allText.push(\"You can't run away from a battle\");\n                    }else{\n                        if(this.state.room.roomLeft.toString().length>25){\n                            this.state.allText.push(`${this.state.room.roomLeft}`);\n                        }else{\n                            roomDecision = this.state.room.roomLeft;\n                            this.changeRoom(roomDecision);\n                        }\n                    }\n                }else{\n                    this.state.allText.push(\"Your path is blocked. Find a way get where you want\");\n                }\n            }else if(realWords[1]===\"east\" || realWords[1]===\"right\" ){\n                if(this.state.room.roomRightBool){\n                    if(this.state.room.roomEnemyAlive){\n                        this.state.allText.push(\"You can't run away from a battle\");\n                    }else{\n                        if(this.state.room.roomRight.toString().length>25){\n                            this.state.allText.push(`${this.state.room.roomRight}`);\n                        }else{\n                            roomDecision = this.state.room.roomRight;\n                            this.changeRoom(roomDecision);\n                        }\n                    }\n                }else{\n                    this.state.allText.push(\"Your path is blocked. Find a way get where you want\");\n                }\n                this.addAndSetState();\n            }else{\n                this.state.allText.push(`That is not a valid way to move. Please type a valid \"move\" command`);\n                this.addAndSetState();\n            }\n        }\n        else{\n            if(!errorEquipUnequip){\n                saxios.get(`api/user/allVerbs`)\n                .then(\n                    ({data})=>{\n                        let allV:IVerbs[] = data;\n                        for (let c:number=0;c<allV.length;c++){//cycle through each verb to see if the first word is a valid verb\n                            if(realWords[0]===allV[c].name){\n                                let verbText:string = \"object\"+allV[c].associateVerb.charAt(0).toUpperCase()+allV[c].associateVerb.slice(1);//the property in each object that will be searched\n                                for (let d:number=0;d<allV.length;d++){//cycle through each verb to see if the second word is a valid verb\n                                    if(objectText===allV[d].name && allV[c].associateVerb===\"help\"){\n                                        this.state.allText.push(allV[d].objectHelp);\n                                        this.addAndSetState();\n                                        printed=true;\n                                    }\n                                }\n                                for(let a:number = 0;a<this.state.room.roomObjectsEnv.length;a++){\n                                    if(this.state.room.roomObjectsEnv[a].objectName === objectTextUpC){\n                                        for(let b:number = 0;b<(Object.entries(this.state.room.roomObjectsEnv[a])).length;b++){\n                                            if((Object.entries(this.state.room.roomObjectsEnv[a]))[b][0]===verbText){\n                                                for(let c:number = 0;c<(Object.entries(this.state.room.roomObjectsEnv[a])).length;c++){\n                                                    if(Object.entries(this.state.room.roomObjectsEnv[a])[c][0]===(verbText+\"Bool\")){\n                                                        if (Object.entries(this.state.room.roomObjectsEnv[a])[c][1] || this.checkIfKey(realWords)){\n                                                            let uri:string = '';\n                                                            let msg:string = '';\n                                                            if(realWords[0]===\"open\"){\n                                                                msg = `${(Object.entries(this.state.room.roomObjectsEnv[a]))[b][1]}`;\n                                                                if(realWords[2]===\"door\"||realWords[2]===\"doors\"||realWords[2]===\"Door\"||realWords[2]===\"doors\"){\n                                                                    uri = `/api/user/openDoor`;\n                                                                    msg=`You opened the ${objectTextUpC}`;\n                                                                }\n                                                                if(realWords[2]===\"chest\"||realWords[2]===\"Chest\"){\n                                                                    uri = `/api/user/openChest`;\n                                                                }\n                                                            }\n                                                            if(uri!==''){\n                                                                saxios.put(\n                                                                    uri,\n                                                                    {\n                                                                        roomID: this.state.user.userCurrentRoom,\n                                                                        uName: this.state.name,\n                                                                        objectN: objectTextUpC,\n                                                                        InvObjs: this.state.user.userInventory,\n                                                                    }\n                                                                )\n                                                                .then(\n                                                                    ({data})=>{\n                                                                        this.state.allText.push(msg);\n                                                                        if(data.more){\n                                                                            this.state.allText.push(data.more);\n                                                                        }\n                                                                        this.addAndSetState();\n                                                                    }\n                                                                )\n                                                                .catch(\n                                                                    (err)=>{\n                                                                        console.log(err);\n                                                                    }\n                                                                )\n                                                                printed=true;\n                                                            }\n                                                        }else{\n                                                            this.state.allText.push(`${(Object.entries(this.state.room.roomObjectsEnv[a]))[b][1]}`);\n                                                            printed=true;\n                                                            this.addAndSetState();\n                                                        }\n                                                    }\n                                                }  \n                                            }\n                                        }\n                                    }\n                                }\n                                let ifInv:boolean = false;\n                                for(let c:number=0;c<this.state.allInventory.length;c++){\n                                    if(this.state.allInventory[c].objectName===objectTextUpC){\n                                        ifInv=true;\n                                    }\n                                }\n                                if(ifInv){\n                                    let mainArray:any[] = [];\n                                    let uri:string = ``;\n                                    if(verbText===\"objectGrab\"){\n                                        mainArray = this.state.room.roomObjectsInv;\n                                        uri = `/api/user/grab`;\n                                    }\n                                    else if(verbText===\"objectUse\" && realWords[2]===\"key\"){\n                                        uri = `/api/user/useKey`;\n                                        mainArray = this.state.user.userInventory;\n                                    }\n                                    else if(verbText===\"objectUse\" || verbText===\"objectEat\"){\n                                        uri = `/api/user/useHealingItem`;\n                                        mainArray = this.state.user.userInventory;\n                                    }\n                                    else if(verbText!==\"objectDrop\" && verbText!==\"objectEquip\" && verbText!==\"objectUnequip\"){\n                                        mainArray = this.state.user.userInventory;\n                                    }\n                                    else{\n                                        for(let s:number=0;s<this.state.room.roomObjectsInv.length;s++){\n                                            mainArray.push(this.state.room.roomObjectsInv[s]);\n                                        }\n                                        for(let s:number=0;s<this.state.user.userInventory.length;s++){\n                                            mainArray.push(this.state.user.userInventory[s]);\n                                        }\n                                    }\n                                    for(let a:number=0;a<mainArray.length;a++){\n                                        if(mainArray[a].objectName === objectTextUpC){\n                                            for(let b:number = 0;b<(Object.entries(mainArray[a])).length;b++){\n                                                if(Object.entries(mainArray[a])[b][0]===verbText){\n                                                    let obj:string=mainArray[a]\n                                                    if(verbText===\"objectDrop\"){\n                                                        uri = `/api/user/drop`;\n                                                    }\n                                                    if(verbText===\"objectEquip\"){\n                                                        uri=`/api/user/equip`\n                                                    }\n                                                    if(verbText===\"objectUnequip\"){\n                                                        uri=`/api/user/unequip`;\n                                                        obj=objectTextUpC;\n                                                    }\n                                                    if(uri!==`` && !printed){\n                                                        saxios.put(\n                                                            `${uri}`,\n                                                            {\n                                                                object: obj,\n                                                                currentRName: this.state.room.roomName,\n                                                                currentRID: this.state.user.userCurrentRoom,\n                                                                uName: this.state.name,\n                                                                InvObjs: mainArray,\n                                                                leftE: this.state.user.userLeftEquip.objectName,\n                                                                rightE: this.state.user.userRightEquip.objectName,\n                                                                dir: direction,\n                                                                realH: this.state.user.userRealHealth,\n                                                                baseH: this.state.user.userBaseHealth,\n                                                                doorP: realWords[1].charAt(0).toUpperCase()+realWords[1].slice(1),\n                                                            }\n                                                        )\n                                                        .then(\n                                                            ({data})=>{\n                                                                if(data.msg!==undefined || data.length>0){\n                                                                    this.state.allText.push(`${data.msg}`);\n                                                                }\n                                                                if((!data.msg) || data.msg===\"\" || data.length===0){\n                                                                    this.state.allText.push((Object.entries(mainArray[a])[b][1] as string));\n                                                                }\n                                                                if(data.more){\n                                                                    this.state.allText.push(`${data.more}`);\n                                                                }\n                                                                this.setState({\n                                                                    msg: \"\"\n                                                                },()=>{\n                                                                    this.addAndSetState();\n                                                                });\n                                                            }\n                                                        )\n                                                        .catch(\n                                                            (err)=>{\n                                                                console.log(err);\n                                                            }\n                                                        )\n                                                        printed=true; \n                                                    }\n                                                    if(!printed){\n                                                        this.addAndSetState();\n                                                        printed=true;  \n                                                        \n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    if(!printed){\n                                        this.state.allText.push(`There's no ${objectTextUpC} available to ${allV[c].associateVerb}`);\n                                        this.addAndSetState();\n                                        printed=true;\n                                    }\n                                }\n                            }\n                        }\n                        if(!printed){\n                            this.state.allText.push(`You can't possibly think to \"${realWords[0]}\" ${objectTextUpC}`);\n                            this.addAndSetState();\n                        }\n                    }\n                )\n                .catch(\n                    (err)=>{\n                        console.log(err);\n                    }\n                )    \n            }\n        }\n        if(!printed){\n            this.addAndSetState();\n        }\n    }\n    onClickBtn = (e: React.MouseEvent<HTMLButtonElement>)=>{\n        if(this.state.command!==\"\"){\n            this.mainGameCode();\n        }\n    }\n    onKeyPress = (e: React.KeyboardEvent<HTMLInputElement>)=>{\n        if(e.keyCode===13){\n            if(this.state.command!==\"\"){\n                this.mainGameCode();\n            }\n        }\n    }\n    render(){\n        let num:number=0;\n        let uiItems:object;\n        if(this.state.allText!==null){\n            uiItems = this.state.allText.map(\n                (item)=>{\n                    num++;\n                    return(\n                        <p key={num}>{item}</p>\n                    )\n                }\n            );    \n        }else{\n            uiItems = <p key=\"0\">Empty</p>\n        }\n        return(\n            <Page auth={this.props.auth}>\n                <div className=\"container d-flex flex-column align-items-center justify-content-center\">\n                    <aside \n                        className=\"bg-secondary\"\n                        id=\"aside\"\n                    >\n                        {uiItems}\n                    </aside>\n                    &nbsp;\n                    <div className=\"container d-flex flex-row\">\n                        <Input\n                            type=\"text\" \n                            className=\"form-control bg-secondary text-white\" \n                            placeholder=\"Enter your command\"\n                            name=\"command\"\n                            value={this.state.command}\n                            onChange={this.onChangeText}\n                            keyDown={this.onKeyPress}\n                        ></Input>\n                        <button className=\"btn btn-success\" onClick={this.onClickBtn}><IoIosReturnLeft/></button>\n                    </div>\n                </div>\n            </Page>\n        )\n    }\n}\ninterface IGameState{\n    command: string;\n    name: string|null;\n    allText: string[];\n    user: IUser;\n    room: IRoom;\n    allInventory: any[];\n    allV: any[];\n    msg: string;\n}\ninterface IUser{\n    _id: string;\n    userCurrentRoom: ObjectID|string;\n    userInventory: any[];\n    userLeftEquip: IEquip;\n    userRightEquip: IEquip;\n    userBaseHealth: number;\n    userRealHealth: number;\n    userAtk: number;\n}\ninterface IRoom{\n    roomName: string;\n    roomEnter: string;\n    roomEnterEnemy: string;\n    roomLook: string;\n    roomLeft: ObjectID|string;\n    roomRight: ObjectID|string;\n    roomForward: ObjectID|string;\n    roomBackward: ObjectID|string;\n    roomObjectsInv: any[]\n    roomObjectsEnv: any[]\n    roomEnemy: IEnemy;\n    roomEnemyHealth: number;\n    roomEnemyAlive: boolean;\n    roomLeftBool: boolean;\n    roomRightBool: boolean;\n    roomForwardBool: boolean;\n    roomBackwardBool: boolean;\n}\ninterface IVerbs{\n    name: string;\n    objectHelp: string;\n    associateVerb: string;\n}\ninterface IEquip{\n    objectName: string;\n    objectType: string;\n    objectValue: number;\n    objectWeight: number;\n}\ninterface IEnemy{\n    enemyName: string;\n    enemyATK: number;\n    enemyWeapon: IEquip;\n    enemyDesc: string;\n}","import React, {Component} from 'react';\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport { setLocalStorage, getLocalStorage, removeLocalStorage } from './Components/Utilities/Utilities';\nimport PrivateRoute from './Components/SecureRoute/SecureRoute';\n\nimport Home from './Components/Pages/Public/Home/Home';\nimport Login from './Components/Pages/Public/Login/Login';\nimport New from './Components/Pages/Public/New/New';\nimport Game from './Components/Pages/Private/Game/Game';\n\nclass App extends Component<IAppProps, IAppState>{\n  constructor(props: IAppProps){\n    super(props);\n    this.state = {\n      username: (getLocalStorage(\"name\")||''),\n      useremail: (getLocalStorage(\"email\")||''),\n    };\n  }\n  login=(name: string, email: string)=>{\n    const uName = name;\n    const uEmail = email;\n    this.setState({\n      username: uName,\n      useremail: uEmail\n    });\n    setLocalStorage(\"name\", uName);\n    setLocalStorage(\"email\", uEmail);\n  }\n  logout=()=>{\n    this.setState({\n      username: '',\n      useremail: ''\n    });\n    removeLocalStorage(\"name\");\n    removeLocalStorage(\"email\");\n  }\n  render(){\n    const auth = {\n      email: this.state.useremail,\n      name: this.state.username,\n      logout: this.logout\n    }\n    return(\n      <Router>\n        <Switch>\n          <Route render={(props) => { return (<Home {...props} auth={auth}/>) }} path=\"/\" exact />\n          <Route render={(props) => { return (<Login {...props} auth={auth} login={this.login} />)}} path=\"/login\" exact/>\n          <Route render={(props) => { return (<New {...props} auth={auth}/>)}} path='/new' exact/>\n          <PrivateRoute component={Game} path=\"/game\" auth={auth}/>\n        </Switch>\n      </Router>\n    )\n  }\n}\n\nexport default App;\n\ninterface IAppProps{\n\n}\ninterface IAppState{\n  username: string;\n  useremail: string;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}