{"version":3,"sources":["Components/Utilities/Utilities.tsx","Components/SecureRoute/SecureRoute.tsx","Components/Header/Header.tsx","Components/Pages/Page.tsx","Components/Pages/Public/Home/Home.tsx","Components/Common/Validators/Validators.tsx","Components/Common/Input/Input.tsx","Components/Pages/Public/Login/Login.tsx","Components/Pages/Public/New/New.tsx","Components/Pages/Private/Game/Game.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["normalAxios","createBrowserHistory","axios","create","defaults","headers","common","post","put","naxios","secureAxios","saxios","localStorageAvailable","localStorage","setItem","removeItem","e","setLocalStorage","key","value","getLocalStorage","getItem","removeLocalStorage","parts","auth","email","name","render","props","component","path","exact","to","Header","onClickLogout","logout","state","this","className","onClick","Component","children","Login","onClickBtn","alert","setState","redirect","redirectTo","dir","emailRegex","badEmail","emptyRegex","badNames","allMoves","error","caption","type","id","onChange","placeholder","onKeyDown","keyDown","validate","val","nameErrors","tmpErrors","undefined","test","push","Object","assign","emailError","onChangeText","currentTarget","errors","length","preventDefault","stopPropagation","get","then","data","userActive","login","userName","userEmail","catch","err","console","log","New","nameError","Game","addAndSetState","emailS","commands","allText","command","aside","document","getElementById","scrollTop","scrollHeight","getHit","newHP","user","userRealHealth","userN","health","componentDidMount","hitEnemy","remainingHealth","roomN","room","roomName","killEnemy","roomEnemyAlive","a","roomID","userCurrentRoom","chestName","chest","objectName","uName","currentRName","directionAttack","h","direction","objectType","objectValue","objectWeight","userLeftEquip","userRightEquip","enemy","roomEnemy","me","userAtk","roomEnemyHealth","enemyName","enemyAttack","rslt","enemyATK","enemyWeapon","attackSequence","left","right","myNewHP","checkIfKey","words","obj","charAt","toUpperCase","slice","x","userInventory","changeRoom","mainGameCode","toLowerCase","split","realWords","forEach","word","objectText","objectTextUpC","printed","errorEquipUnequip","uInv","userBaseHealth","roomObjectsInv","roomLook","roomDecision","roomForward","toString","roomForwardBool","roomBackward","roomBackwardBool","roomLeft","roomLeftBool","roomRight","roomRightBool","allV","c","verbText","associateVerb","d","objectHelp","roomObjectsEnv","b","entries","uri","msg","objectN","more","ifInv","allInventory","mainArray","s","object","InvObjs","leftE","rightE","realH","baseH","doorP","onKeyPress","keyCode","_id","roomEnter","roomEnterEnemy","enemyDesc","userCommands","uiItems","num","map","item","getDerivedStateFromProps","App","uEmail","username","useremail","Boolean","window","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a4fea647.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { createBrowserHistory } from \"history\";\r\n\r\nexport default createBrowserHistory();\r\n\r\nlet normalAxios = axios.create();\r\nnormalAxios.defaults.headers.common['cache-control'] = \"no-cache\";\r\nnormalAxios.defaults.headers.post['Content-Type'] = \"no-cache\";\r\nnormalAxios.defaults.headers.put['Content-Type'] = \"no-cache\";\r\n\r\nexport const naxios = normalAxios;\r\n\r\nlet secureAxios = axios.create();\r\nsecureAxios.defaults.headers.common['cache-control'] = \"no-cache\";\r\nsecureAxios.defaults.headers.post['Content-Type'] = \"no-cache\";\r\nsecureAxios.defaults.headers.put['Content-Type'] = \"no-cache\";\r\n\r\nexport const saxios = secureAxios;\r\n\r\nconst localStorageAvailable = (()=>{\r\n    let b = 'b';\r\n    try{\r\n        localStorage.setItem(b, b);\r\n        localStorage.removeItem(b);\r\n        return true;\r\n    }catch(e){\r\n        return false;\r\n    }\r\n});\r\n\r\nexport const setLocalStorage = (key:string, value:string)=>{\r\n    if(localStorageAvailable()){\r\n        localStorage.setItem(key, value);\r\n        return true;\r\n    }else{\r\n        return false;\r\n    }\r\n}\r\n\r\nexport const getLocalStorage = (key:string)=>{\r\n    if(localStorageAvailable()){\r\n        return localStorage.getItem(key);\r\n    }else{\r\n        return null;\r\n    }\r\n}\r\n\r\nexport const removeLocalStorage = (key:string)=>{\r\n    if(localStorageAvailable()){\r\n        localStorage.removeItem(key);\r\n        return true;\r\n    }else{\r\n        return false;\r\n    }\r\n}","import React from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\n\r\nexport default(parts:IEnum)=>{\r\n    if(parts.auth.email!==\"\" || parts.auth.name!==\"\"){\r\n        return(\r\n            <Route render={(...props) => { return (<parts.component {...props} auth={parts.auth}/>) }} path={parts.path} exact />\r\n        )\r\n    }else{\r\n        return(\r\n            <Redirect to=\"/login\"/>        \r\n        )\r\n    }\r\n}\r\ninterface IEnum{\r\n    component: any;\r\n    auth: {\r\n        email: string;\r\n        name: string;\r\n        logout?:()=>void;\r\n    };\r\n    path: string;\r\n}","import React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom'; \r\nimport { IoIosLogIn, IoIosLogOut } from 'react-icons/io'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { IAuth } from '../Common/Interfaces/Interfaces';\r\n\r\nexport default class Header extends Component<IAuth, IHeaderState>{\r\n    constructor(props: IAuth){\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n    onClickLogout = ()=>{\r\n        if(this.props.auth.logout){\r\n            this.props.auth.logout();\r\n        }\r\n    }\r\n    render(){\r\n        if(this.props.auth.email===\"\"){\r\n            return(\r\n                <header className=\"d-flex bg-dark align-items-center\">\r\n                    <Link to=\"/\" className=\"col-sm-11 p-2 text-danger\"><h1 >Adventure!</h1></Link>\r\n                    <Link to=\"/login\" className=\"col-sm-1 align-items-ccenter\"><h4>Login<IoIosLogIn/></h4></Link>\r\n                </header>\r\n            )                \r\n        }else{\r\n            return(\r\n                <header className=\"d-flex bg-dark align-items-center\">\r\n                    <Link to=\"/\" className=\"col-sm-10 p-2 text-danger\"><h1 >Adventure!</h1></Link>\r\n                    <Link to=\"/login\" className=\"col-sm-2 align-items-ccenter\"><h4 onClick={this.onClickLogout}>Logout<IoIosLogOut/></h4></Link>\r\n                </header>\r\n            )                \r\n        }\r\n    }\r\n}\r\n\r\ninterface IHeaderState{\r\n\r\n}\r\n","import React from 'react';\r\nimport Header from '../Header/Header';\r\nimport './Page.css';\r\nimport {IAuth} from '../Common/Interfaces/Interfaces';\r\n\r\n\r\nexport default (props: React.PropsWithChildren<IAuth>)=>{\r\n    return(\r\n        <section className=\"fill\">\r\n            <Header auth={props.auth}></Header>\r\n            <main className=\"d-flex align-items-center justify-content-center\">\r\n                {props.children}\r\n            </main>\r\n        </section>\r\n    )\r\n}","import React, {Component} from 'react';\r\nimport Page from '../../Page';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport {IAuth} from '../../../Common/Interfaces/Interfaces';\r\nimport {removeLocalStorage } from '../../../Utilities/Utilities';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport default class Login extends Component<IAuth, IHomeState>{\r\n    constructor(props: IAuth){\r\n        super(props);\r\n        this.state={\r\n            redirect: false,\r\n            redirectTo: ''\r\n        }\r\n    }\r\n    onClickBtn = (e: React.MouseEvent<HTMLButtonElement>)=>{\r\n        if(this.props.auth.email){\r\n            alert(\"Welcome back \"+this.props.auth.name);\r\n            this.setState({\r\n                redirect: true,\r\n                redirectTo: '/game'\r\n            })\r\n        }else{\r\n            alert(\"To play you need a character first\");\r\n            this.setState({\r\n                redirect: true,\r\n                redirectTo: '/login'\r\n            })\r\n        }\r\n    }\r\n    render(){\r\n        removeLocalStorage(\"potentialEmail\");\r\n        if(this.state.redirect){\r\n            const dir:string = (this.state.redirectTo||'/');\r\n            return (<Redirect to={dir} />);\r\n        }\r\n        return(\r\n            <Page auth={this.props.auth}>\r\n                <div className=\"container\">\r\n                    <button \r\n                        className=\"btn btn-danger col-sm-12\"\r\n                        onClick={this.onClickBtn}\r\n                    >\r\n                        PLAY\r\n                    </button>\r\n                </div>\r\n            </Page>\r\n        )\r\n    \r\n    }\r\n}\r\ninterface IHomeState{\r\n    redirect: boolean;\r\n    redirectTo: string;\r\n}","export const emailRegex = /^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$/;\r\nexport const badEmail = /^\\w{1,3}@\\w{1,3}.\\w{1,3}$/\r\nexport const emptyRegex = /^\\s?$/;\r\nexport const badNames = /^([a-zA-Z]){0,}([a-zA-Z])\\1{1,}([a-zA-Z]){0,}$/\r\nexport const allMoves = /^(forward|front|ahead|north|backward|back|behind|south|left|west|right|east)$/\r\n","import React from 'react';\r\nimport './Input.css'\r\ninterface IInputProps{\r\n    name: string, \r\n    value: string, \r\n    type: string, \r\n    caption?: string, \r\n    onChange?: any, \r\n    error?: object, \r\n    className: string,\r\n    placeholder: string\r\n    keyDown?:any\r\n}\r\n\r\nexport default (props: React.PropsWithChildren<IInputProps>)=>{\r\n    if(props.error && props.caption){\r\n        return(\r\n            <fieldset>\r\n                <legend className=\"main-color\">{props.caption}</legend>\r\n                <br/>\r\n                <input type={props.type||\"text\"} name={props.name} \r\n                id={props.name} value={props.value} className={props.error ? props.className+' error': props.className}\r\n                onChange={(props.onChange || ((e)=>false))} placeholder={props.placeholder} \r\n                onKeyDown={(props.keyDown || ((e)=>false))}\r\n                />\r\n                <br/>\r\n                <br/>\r\n                {(props.error && true) ? (<span className=\"center orange font-weight-bold\">{props.error}</span>) : null}\r\n            </fieldset>\r\n        );    \r\n    }else if(props.error && !props.caption){\r\n        return(\r\n            <fieldset>\r\n                <input type={props.type||\"text\"} name={props.name} \r\n                id={props.name} value={props.value} className={props.error ? props.className+' error': props.className}\r\n                onChange={(props.onChange || ((e)=>false))} placeholder={props.placeholder} \r\n                onKeyDown={(props.keyDown || ((e)=>false))}\r\n                />\r\n                <br/>\r\n                <br/>\r\n                {(props.error && true) ? (<span className=\"center orange font-weight-bold\">{props.error}</span>) : null}\r\n            </fieldset>\r\n        );\r\n    }else if(!props.error && props.caption){\r\n        return(\r\n            <fieldset>\r\n                <legend className=\"main-color\">{props.caption}</legend>\r\n                <br/>\r\n                <input type={props.type||\"text\"} name={props.name} \r\n                id={props.name} value={props.value} className={props.error ? props.className+' error': props.className}\r\n                onChange={(props.onChange || ((e)=>false))} placeholder={props.placeholder}\r\n                onKeyDown={(props.keyDown || ((e)=>false))}\r\n                />\r\n            </fieldset>\r\n        );\r\n    }else{\r\n        return(\r\n            <fieldset>\r\n                <input type={props.type||\"text\"} name={props.name} \r\n                id={props.name} value={props.value} className={props.error ? props.className+' error': props.className}\r\n                onChange={(props.onChange || ((e)=>false))} placeholder={props.placeholder}\r\n                onKeyDown={(props.keyDown || ((e)=>false))}\r\n                />\r\n            </fieldset>\r\n        );    \r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport Page from '../../Page';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport {emailRegex, emptyRegex, badEmail} from '../../../Common/Validators/Validators';\r\nimport Input from '../../../Common/Input/Input';\r\nimport { naxios, removeLocalStorage, setLocalStorage} from '../../../Utilities/Utilities';\r\nimport { IAuth } from '../../../Common/Interfaces/Interfaces';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport default class Login extends Component<IAuth, ILoginState>{\r\n    constructor(props: IAuth){\r\n        super(props);\r\n        this.state={\r\n            email:'',\r\n            emailError: [],\r\n            redirect: false,\r\n            redirectTo: '',\r\n        }\r\n    }\r\n    validate = (val:string)=>{\r\n        let nameErrors:object = {};\r\n        let tmpErrors:string[] = [];\r\n        const email:string = val;\r\n        if(email !== undefined){\r\n            if((!(emailRegex.test(email)))||(emptyRegex.test(email))){\r\n                tmpErrors.push(\"Please type an email with a correct format\");\r\n            }\r\n            nameErrors = Object.assign({}, nameErrors,  {emailError: tmpErrors});\r\n        }\r\n\r\n        return nameErrors;\r\n    }\r\n    onChangeText = (e: React.ChangeEvent<HTMLInputElement>)=>{\r\n        const {name, value} = e.currentTarget;\r\n        let errors:object = this.validate(value);\r\n        let str:string = \"emailError\";\r\n        if(this.state.emailError.length){\r\n            this.setState({\r\n                ...this.state,\r\n                [name]:value,\r\n                [str]:''\r\n            });\r\n        }\r\n        this.setState({\r\n            ...this.state,\r\n            [name]:value,\r\n            ...errors\r\n        });\r\n    }\r\n    onClickBtn = (e: React.MouseEvent<HTMLButtonElement>)=>{\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        let value = this.state.email;\r\n        let errors:object = this.validate(value);\r\n        if(this.state.emailError.length || value===''){\r\n            this.setState({...this.state, ...errors});\r\n        }else{\r\n            if(\r\n                badEmail.test(this.state.email)||\r\n                this.state.email === \"test@test.test\"||\r\n                this.state.email === \"test@test.com\"||\r\n                this.state.email === \"demo@demo.demo\"||\r\n                this.state.email === \"demo@demo.com\"\r\n                \r\n            ){\r\n                alert(\"Please use a reasonable email address\")\r\n            }\r\n            else if(this.state.email === \"easter@egg.com\"){\r\n                alert(\"Easter Egg found! Congratulations!\");\r\n            }else{\r\n                const email = this.state.email;\r\n                naxios.get(\r\n                    `/api/user/myUser/${email}`\r\n                )\r\n                .then(\r\n                    ({data})=>{\r\n                        if(data===null || data ===undefined){\r\n                            alert(\"The user doesn't exist. Redirecting toward creating a new user\");\r\n                            this.setState({\r\n                                ...this.state,\r\n                                redirect: true,\r\n                                redirectTo: '/new'\r\n                            },()=>{\r\n                                setLocalStorage(\"potentialEmail\",this.state.email);\r\n                            })\r\n                        }else if(!data.userActive){\r\n                            alert(\"Your user has been deactivated. Have a great day\");\r\n                        }\r\n                        else{\r\n                            if(this.props.login){\r\n                                this.props.login(data.userName, data.userEmail);\r\n                                this.setState({\r\n                                    ...this.state,\r\n                                    redirect: true,\r\n                                    redirectTo: '/'\r\n                                })    \r\n                            }\r\n                        }\r\n                    }\r\n                )\r\n                .catch(\r\n                    (err)=>{\r\n                        console.log(err); \r\n                    }\r\n                )\r\n            }\r\n        }\r\n    }\r\n    render(){\r\n        removeLocalStorage(\"potentialEmail\");\r\n        if(this.state.redirect){\r\n            const dir:string = (this.state.redirectTo||'/');\r\n            return (<Redirect to={dir} />);\r\n        }\r\n        return(\r\n            <Page auth={this.props.auth}>\r\n                <div className=\"container\">\r\n                    <Input \r\n                        type=\"text\" \r\n                        className=\"form-control bg-transparent text-white\" \r\n                        caption=\"Email\"\r\n                        placeholder=\"Enter your email\"\r\n                        name=\"email\"\r\n                        error={this.state.emailError}                        \r\n                        value={this.state.email}\r\n                        onChange={this.onChangeText}\r\n                    />\r\n                    <button \r\n                        className=\"col-sm-12 btn-secondary\" \r\n                        onClick={this.onClickBtn}\r\n                    >\r\n                        Log In\r\n                    </button>\r\n                </div>\r\n            </Page>\r\n        )\r\n    }\r\n}\r\n\r\ninterface ILoginState{\r\n    email: string;\r\n    emailError: string[];\r\n    redirect: boolean;\r\n    redirectTo: string;\r\n}\r\n","import React, { Component } from 'react';\r\nimport Page from '../../Page';\r\nimport Input from '../../../Common/Input/Input';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { IAuth } from '../../../Common/Interfaces/Interfaces';\r\nimport { getLocalStorage, naxios } from '../../../Utilities/Utilities';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { badNames, emptyRegex } from '../../../Common/Validators/Validators';\r\n\r\nexport default class New extends Component<IAuth, INewState>{\r\n    constructor(props:IAuth){\r\n        super(props);\r\n        this.state={\r\n            name: '',\r\n            nameError: [],\r\n            redirect: false,\r\n            redirectTo: '/'\r\n        }\r\n    }\r\n    validate = (val:string)=>{\r\n        let nameErrors:object = {};\r\n        let tmpErrors:string[] = [];\r\n        const name:string = val;\r\n        if(name !== undefined){\r\n            if((!(badNames.test(name)))||(emptyRegex.test(name))||name.length<=1){\r\n                tmpErrors.push(\"Please type a real name longer than a letter\");\r\n            }\r\n            nameErrors = Object.assign({}, nameErrors,  {nameError: tmpErrors});\r\n        }\r\n        return nameErrors;\r\n    }\r\n    onChangeText = (e: React.ChangeEvent<HTMLInputElement>)=>{\r\n        const {name,value} = e.currentTarget;\r\n        let errors:object = this.validate(value);\r\n        console.log(this.state);\r\n        this.setState({\r\n            ...this.state,\r\n            [name]:value,\r\n            ...errors\r\n        });\r\n    }\r\n    onClickBtn=(e:React.MouseEvent<HTMLButtonElement>)=>{\r\n        const name = this.state.name;\r\n        let errors:object = this.validate(name);\r\n        if(this.state.nameError.length || name===''){\r\n            alert(\"Please type a real name longer than a letter\");\r\n            this.setState({...this.state, ...errors});\r\n        }else if(getLocalStorage(\"potentialEmail\")){\r\n            const email:string|null = getLocalStorage(\"potentialEmail\");\r\n            naxios.get(\r\n                `/api/user/myUser/${email}`\r\n            )\r\n            .then(\r\n                ({data})=>{\r\n                    if(data){\r\n                        alert(\"A user already exists with that email. Please don't tamper with the settings\");\r\n                    }else{\r\n                        naxios.post(\r\n                            `api/user/new`,\r\n                            {\r\n                                name: this.state.name,\r\n                                email: email\r\n                            }\r\n                        )\r\n                        .then(\r\n                            ({data})=>{\r\n                                alert(\"Your character has been created. Let's start this story...\");\r\n                                this.setState({\r\n                                    redirect: true,\r\n                                    redirectTo: '/game'\r\n                                })\r\n                            }\r\n                        )\r\n                        .catch(\r\n                            (err)=>{\r\n                                console.log(err);\r\n                            }\r\n                        )\r\n                    }\r\n                }\r\n            )\r\n            .catch(\r\n                (err)=>{\r\n                    console.log(err);\r\n                }\r\n            )\r\n        }else{\r\n            alert(\"You got no email address for your new character... Redirecting to assignin one\");\r\n            this.setState({\r\n                redirect: true,\r\n                redirectTo: \"/login\"\r\n            });\r\n        }\r\n    }\r\n    render(){\r\n        if(this.state.redirect){\r\n            const dir:string = (this.state.redirectTo||'/');\r\n            return (<Redirect to={dir} />);\r\n        }\r\n        return(\r\n            <Page auth={this.props.auth}>\r\n                <div className=\"container\">\r\n                    <Input\r\n                        type=\"text\" \r\n                        className=\"form-control bg-transparent text-white\" \r\n                        caption=\"Name\"\r\n                        placeholder=\"Enter your character's name\"\r\n                        name=\"name\"\r\n                        error={this.state.nameError}              \r\n                        value={this.state.name}\r\n                        onChange={this.onChangeText}\r\n                    >\r\n                    </Input>\r\n                    <button \r\n                        className=\"col-sm-12 btn-secondary\" \r\n                        onClick={this.onClickBtn}\r\n                    >\r\n                        Start Game!\r\n                    </button>\r\n                </div>\r\n            </Page>\r\n        )\r\n    }\r\n}\r\ninterface INewState{\r\n    name: string;\r\n    nameError: string[];\r\n    redirect: boolean;\r\n    redirectTo: string;\r\n}\r\n","import React, { Component } from 'react';\r\nimport Page from '../../Page';\r\nimport { IAuth } from '../../../Common/Interfaces/Interfaces';\r\nimport './Game.css';\r\nimport { getLocalStorage, saxios } from '../../../Utilities/Utilities';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Input from '../../../Common/Input/Input';\r\nimport { ObjectID } from 'mongodb';\r\nimport { IoIosReturnLeft } from 'react-icons/io';\r\nimport { allMoves } from '../../../Common/Validators/Validators';\r\n\r\nexport default class Game extends Component<IAuth, IGameState>{\r\n    constructor(props: IAuth){\r\n        super(props);\r\n        this.state={\r\n            command: \"\",\r\n            name: (getLocalStorage(\"name\")||\"AAAAA\"),\r\n            allText: [],\r\n            user: {\r\n                _id:\"\",\r\n                userCurrentRoom: \"\",\r\n                userInventory: [],\r\n                userLeftEquip: {\r\n                    objectName: \"\",\r\n                    objectType: \"\",\r\n                    objectValue: 0,\r\n                    objectWeight: 0\r\n                },\r\n                userRightEquip: {\r\n                    objectName: \"\",\r\n                    objectType: \"\",\r\n                    objectValue: 0,\r\n                    objectWeight: 0\r\n                },\r\n                userBaseHealth:0,\r\n                userRealHealth:0,\r\n                userAtk:0\r\n            },\r\n            room: {\r\n                roomName: \"\",\r\n                roomEnter: \"\",\r\n                roomEnterEnemy: \"\",\r\n                roomLook: \"\",\r\n                roomLeft: \"\",\r\n                roomRight: \"\",\r\n                roomForward: \"\",\r\n                roomBackward: \"\",\r\n                roomObjectsInv: [],\r\n                roomObjectsEnv: [],\r\n                roomEnemy: {\r\n                    enemyName: \"\",\r\n                    enemyATK: 0,\r\n                    enemyWeapon:{\r\n                        objectName: \"\",\r\n                        objectType: \"\",\r\n                        objectValue: 0,\r\n                        objectWeight: 0\r\n                    },\r\n                    enemyDesc: \"\",\r\n                },\r\n                roomEnemyHealth: 1,\r\n                roomEnemyAlive: false,\r\n                roomLeftBool: false,\r\n                roomRightBool: false,\r\n                roomForwardBool: false,\r\n                roomBackwardBool: false\r\n            },\r\n            allInventory: [],\r\n            msg: \"\",\r\n        }\r\n    }\r\n    static getDerivedStateFromProps = (props:IAuth, state:IGameState)=>{\r\n        if(state.name===\"AAAAA\"){\r\n            alert(\"An error has ocurred. Please log in again\");\r\n            return(<Redirect to=\"/login\"/>);\r\n        }\r\n        saxios.get(\r\n            `/api/user/allInvObjects`\r\n        )\r\n        .then(\r\n            ({data})=>{\r\n                for(let a:number=0;a<data.length;a++){\r\n                    state.allInventory.push(data[a].objectName);\r\n                }\r\n            }\r\n        )\r\n        .catch(\r\n            (err)=>{\r\n                console.log(err);\r\n            }\r\n        )\r\n        return null;    \r\n    }\r\n    componentDidMount(){\r\n        let email:string|null = (getLocalStorage(\"email\")||\"AAAAA\");\r\n        saxios.get(\r\n            `/api/user/myUser/${email}`\r\n        )\r\n        .then(\r\n            ({data})=>{\r\n                this.setState({\r\n                    user: data,\r\n                    msg: \"\",\r\n                    allText: data.userCommands\r\n                },()=>{\r\n                    if(this.state.user.userRealHealth<=0){\r\n                        alert(\"You died. Restarting from the beginning...\");\r\n                        saxios.put(\r\n                            `/api/user/death`,\r\n                            {\r\n                                name: this.state.name\r\n                            }\r\n                        )\r\n                        .then(\r\n                            ({data})=>{\r\n                                alert(data.msg);\r\n                            }\r\n                        )\r\n                        .catch(\r\n                            (err)=>{\r\n                                console.log(err);\r\n                            }\r\n                        )\r\n                    }else{\r\n                        saxios.get(`/api/user/currentRoom/${this.state.user._id}/${this.state.user.userCurrentRoom}`)\r\n                        .then(\r\n                            ({data})=>{\r\n                                let aside = document.getElementById(\"aside\") as HTMLElement;\r\n                                aside.scrollTop = aside.scrollHeight;\r\n                                this.setState({\r\n                                    room: data\r\n                                },()=>{\r\n                                    const words:string[] = this.state.allText[this.state.allText.length-1].split(\" \");\r\n                                    if(allMoves.test(words[1])){\r\n                                        if(this.state.room.roomEnemyAlive){\r\n                                            this.state.allText.push(`${this.state.room.roomEnterEnemy}`);\r\n                                            this.addAndSetState();\r\n                                        }else{\r\n                                            this.state.allText.push(`${this.state.room.roomEnter}`);\r\n                                            this.addAndSetState();\r\n                                        }\r\n                                    }\r\n                                });\r\n                            }\r\n                        )\r\n                        .catch(\r\n                            (err)=>{\r\n                                console.log(err);  \r\n                            }\r\n                        )    \r\n                    }\r\n                })\r\n            }\r\n        )\r\n        .catch(\r\n            (err)=>{\r\n                console.log(err);\r\n            }\r\n        )\r\n    }\r\n    onChangeText = (e: React.ChangeEvent<HTMLInputElement>)=>{\r\n        const {name, value} = e.currentTarget;\r\n        this.setState({\r\n            ...this.state,\r\n            [name]:value,\r\n        });\r\n    }\r\n    addAndSetState = () =>{\r\n        let emailS:string|null = (getLocalStorage(\"email\")||\"AAAAA\");\r\n        saxios.put(\r\n            `/api/user/addCommand`,\r\n            {\r\n                email: emailS,\r\n                commands: this.state.allText\r\n            }\r\n        )\r\n        this.setState({\r\n            command: \"\"\r\n        },()=>{\r\n            let aside = document.getElementById(\"aside\") as HTMLElement;\r\n            aside.scrollTop = aside.scrollHeight;\r\n        });\r\n    }\r\n    getHit = (newHP:number) =>{\r\n        let user:IUser = this.state.user;\r\n        this.setState({\r\n            user:{\r\n                ...user,\r\n                userRealHealth: newHP,\r\n            }\r\n        },()=>{\r\n            saxios.put(\r\n                `/api/user/getHit`,\r\n                {\r\n                    userN: this.state.name,\r\n                    health: newHP\r\n                }\r\n            )\r\n            .then(\r\n                ({data})=>{\r\n                    this.addAndSetState();\r\n                    this.componentDidMount();\r\n                }\r\n            )\r\n            .catch(\r\n                (err)=>{\r\n                    console.log(err);\r\n                }\r\n            )    \r\n        })\r\n    }\r\n    hitEnemy=(remainingHealth:number)=>{\r\n            saxios.put(\r\n                `/api/user/hitEnemy`,\r\n                {\r\n                    userN: this.state.name,\r\n                    roomN: this.state.room.roomName,\r\n                    newHP: remainingHealth,\r\n                }\r\n            )\r\n            .then(\r\n                ({data})=>{\r\n                    this.addAndSetState();\r\n                    this.componentDidMount();\r\n                }\r\n            )\r\n            .catch(\r\n                (err)=>{\r\n                    console.log(err);\r\n                }\r\n            )    \r\n\r\n    }\r\n    killEnemy = () =>{\r\n        let room:IRoom = this.state.room;\r\n        this.setState({\r\n            room:{\r\n                ...room,\r\n                roomEnemyAlive:false,\r\n            }\r\n        },()=>{\r\n            saxios.put(\r\n                `/api/user/killedEnemy`,\r\n                {\r\n                    userN: this.state.name,\r\n                    roomN: this.state.room.roomName,\r\n                }\r\n            )\r\n            .then(\r\n                ({data})=>{\r\n                    saxios.get(\r\n                        `/api/user/allChestRoom`\r\n                    )\r\n                    .then(\r\n                        ({data})=>{\r\n                            for(let a:number=0;a<data.length;a++){\r\n                                if(data[a].roomID===this.state.user.userCurrentRoom){\r\n                                    let chestName:string = data[a].chest.objectName;\r\n                                    saxios.put(\r\n                                        `/api/user/addChestToRoom`,\r\n                                        {\r\n                                            uName: this.state.name, \r\n                                            currentRName: this.state.room.roomName, \r\n                                            chest: data[a].chest\r\n                                        }\r\n                                    )\r\n                                    .then(\r\n                                        ({data})=>{\r\n                                            this.state.allText.push(`As the enemy vanishes into thin air, a chest appears out of nowhere.\r\n                                            The chest has an inscription that says \"${chestName}\"`);\r\n                                            this.addAndSetState();\r\n                                            this.componentDidMount();\r\n                                        }\r\n                                    )\r\n                                    .catch(\r\n                                        (err)=>{\r\n                                            console.log(err);\r\n                                        }\r\n                                    )\r\n                                }\r\n                            }\r\n                        }\r\n                    )\r\n                    .catch(\r\n                        (err)=>{\r\n                            console.log(err);\r\n                        }\r\n                    )\r\n                }\r\n            )\r\n            .catch(\r\n                (err)=>{\r\n                    console.log(err);\r\n                }\r\n            )    \r\n        })\r\n    }\r\n    directionAttack = (dir:string, h:number) =>{\r\n        let direction:IEquip = {\r\n            objectName: \"\",\r\n            objectType: \"\",\r\n            objectValue: 0,\r\n            objectWeight: 0\r\n        };\r\n\r\n        if(dir===\"left\"){\r\n            direction = this.state.user.userLeftEquip;\r\n        }else{\r\n            direction = this.state.user.userRightEquip;\r\n        }\r\n        let enemy:IEnemy = this.state.room.roomEnemy;\r\n        let me:IUser = this.state.user;\r\n        let room:IRoom = this.state.room;\r\n        this.state.allText.push(`You attacked with a ${direction.objectName}, dealing ${me.userAtk+direction.objectValue} damage`);\r\n        let remainingHealth:number = (h - (me.userAtk+direction.objectValue));\r\n        //Subtract from enemy\r\n        this.hitEnemy(remainingHealth);\r\n        this.setState({\r\n            room:{\r\n                ...room,\r\n                roomEnemyHealth:remainingHealth\r\n            }\r\n        },()=>{\r\n            if(remainingHealth<=0){\r\n                this.state.allText.push(`${enemy.enemyName} died...`)\r\n                //change roomEnemyAlive a false\r\n                this.killEnemy();\r\n            }\r\n        });\r\n        return remainingHealth;\r\n    }\r\n    enemyAttack = (dir:string) =>{\r\n        let direction:IEquip = {\r\n            objectName: \"\",\r\n            objectType: \"\",\r\n            objectValue: 0,\r\n            objectWeight: 0\r\n        };\r\n        if(dir===\"left\"){\r\n            direction = this.state.user.userLeftEquip;\r\n        }else{\r\n            direction = this.state.user.userRightEquip;\r\n        }\r\n        let enemy:IEnemy = this.state.room.roomEnemy;\r\n        let me:IUser = this.state.user;\r\n        let rslt:number=0;\r\n        if(direction.objectValue>=(enemy.enemyATK+enemy.enemyWeapon.objectValue)){\r\n            rslt=0;\r\n        }else{\r\n            rslt=(direction.objectValue-(enemy.enemyATK+enemy.enemyWeapon.objectValue));\r\n        }\r\n        this.state.allText.push(`${enemy.enemyName} attacked with ${enemy.enemyWeapon.objectName}, \r\n        dealing ${enemy.enemyATK+enemy.enemyWeapon.objectValue} damage, but with your ${direction.objectName},\r\n        you reduced the damage to ${rslt}`);\r\n        //subtract from you (using rslt)\r\n        let remainingHealth:number = (me.userRealHealth-(enemy.enemyATK+enemy.enemyWeapon.objectValue));\r\n        this.getHit(remainingHealth);\r\n        if(me.userRealHealth<=0){\r\n            //Take to kill code(Which is at the end, because it checks for death every didMount)\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    attackSequence = ()=>{\r\n        let left:IEquip = this.state.user.userLeftEquip;\r\n        let right:IEquip = this.state.user.userRightEquip;\r\n        let enemy:IEnemy = this.state.room.roomEnemy;\r\n        let me:IUser = this.state.user;\r\n        let room:IRoom = this.state.room;\r\n        if(left.objectType===\"ATK\"){\r\n            if(right.objectType===\"ATK\"){\r\n                if(left.objectWeight<=enemy.enemyWeapon.objectWeight){\r\n                    if(left.objectWeight+right.objectWeight<=enemy.enemyWeapon.objectWeight){\r\n                        this.state.allText.push(`You attacked with the ${left.objectName} followed by ${right.objectName},\r\n                        making a total of ${me.userAtk*(left.objectValue+right.objectValue)}`);\r\n                        //Subtract from enemy\r\n                        let remainingHealth:number = (room.roomEnemyHealth - (me.userAtk*(left.objectValue+right.objectValue)));\r\n                        this.hitEnemy(remainingHealth);\r\n                        if((room.roomEnemyHealth-(me.userAtk*(left.objectValue+right.objectValue)))>0){\r\n                            this.state.allText.push(`${enemy.enemyName} attacked with ${enemy.enemyWeapon.objectName}, \r\n                            dealing ${enemy.enemyATK+enemy.enemyWeapon.objectValue} damage`);\r\n                           //subtract from you\r\n                           let myNewHP = (me.userRealHealth - (enemy.enemyATK+enemy.enemyWeapon.objectValue));\r\n                           this.getHit(myNewHP);\r\n                        }else{\r\n                            this.state.allText.push(`${enemy.enemyName} died...`);\r\n                            this.killEnemy();\r\n                        }\r\n                    }else{\r\n                        let h:number = this.directionAttack(\"left\", this.state.room.roomEnemyHealth);\r\n                        if(h>0){\r\n                            this.state.allText.push(`${enemy.enemyName} attacked with ${enemy.enemyWeapon.objectName}, \r\n                            dealing ${enemy.enemyATK+enemy.enemyWeapon.objectValue} damage`);\r\n                            //subtract from you\r\n                            let myNewHP = (me.userRealHealth - (enemy.enemyATK+enemy.enemyWeapon.objectValue));\r\n                            this.getHit(myNewHP);\r\n                            if(me.userRealHealth>0){\r\n                                this.directionAttack(\"right\", h);\r\n                            }\r\n                        }\r\n                    }\r\n                }else if(right.objectWeight<=enemy.enemyWeapon.objectWeight){\r\n                    let h:number = this.directionAttack(\"right\", this.state.room.roomEnemyHealth)\r\n                    if(h>0){\r\n                        this.state.allText.push(`${enemy.enemyName} attacked with ${enemy.enemyWeapon.objectName}, \r\n                        dealing ${enemy.enemyATK+enemy.enemyWeapon.objectValue} damage`);\r\n                        //subtract from you\r\n                        let myNewHP = (me.userRealHealth - (enemy.enemyATK+enemy.enemyWeapon.objectValue));\r\n                        this.getHit(myNewHP);\r\n                        if(me.userRealHealth>0){\r\n                            this.directionAttack(\"left\", h)\r\n                        }\r\n                    }\r\n                }else{\r\n                    this.state.allText.push(`${enemy.enemyName} attacked with ${enemy.enemyWeapon.objectName}, \r\n                    dealing ${enemy.enemyATK+enemy.enemyWeapon.objectValue} damage`);\r\n                    //subtract from you\r\n                    let myNewHP = (me.userRealHealth - (enemy.enemyATK+enemy.enemyWeapon.objectValue));\r\n                    this.getHit(myNewHP);\r\n                    if(me.userRealHealth>0){\r\n                        this.state.allText.push(`You attacked with the ${left.objectName} followed by ${right.objectName},\r\n                        making a total of ${me.userAtk*(left.objectValue+right.objectValue)}`);\r\n                        //Subtract from enemy\r\n                        let remainingHealth:number = (room.roomEnemyHealth - (me.userAtk*(left.objectValue+right.objectValue)));\r\n                        this.hitEnemy(remainingHealth);\r\n                        if((room.roomEnemyHealth-(me.userAtk*(left.objectValue+right.objectValue)))<=0){\r\n                            this.state.allText.push(`${enemy.enemyName} died...`);\r\n                            this.killEnemy();\r\n                        }\r\n                    }\r\n                }\r\n            }else{\r\n                if(right.objectWeight+left.objectWeight <= enemy.enemyWeapon.objectWeight){\r\n                    if(this.directionAttack(\"left\", this.state.room.roomEnemyHealth)>0){\r\n                        this.enemyAttack(\"right\");\r\n                    }\r\n                }else{\r\n                    if(this.enemyAttack(\"right\")){\r\n                        this.directionAttack(\"left\", this.state.room.roomEnemyHealth);\r\n                    }\r\n                }\r\n            }\r\n        }else if(right.objectType===\"ATK\"){\r\n            if(right.objectWeight+left.objectWeight <= enemy.enemyWeapon.objectWeight){\r\n                if(this.directionAttack(\"right\", this.state.room.roomEnemyHealth)>0){\r\n                    this.enemyAttack(\"left\");\r\n                }\r\n            }else{\r\n                if(this.enemyAttack(\"left\")){\r\n                    this.directionAttack(\"right\", this.state.room.roomEnemyHealth);\r\n                }   \r\n            }\r\n        }else{\r\n            this.state.allText.push(`You have nothing to attack with, try equipping a useful weapon`);\r\n        }\r\n        this.addAndSetState();\r\n        this.componentDidMount();\r\n    }\r\n    checkIfKey = (words:string[])=>{\r\n        if(words[2]===\"door\" || words[2]===\"doors\" || words[2]===\"Door\" || words[2]===\"Doors\"){\r\n            let obj:string = words[1].charAt(0).toUpperCase()+words[1].slice(1)+\" Key\";\r\n            for (let x:number=0;x<this.state.user.userInventory.length;x++){\r\n                if(this.state.user.userInventory[x].objectName===obj){\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n    changeRoom=(room:ObjectID|string)=>{\r\n        saxios.put(\r\n            `/api/user/changeRoom`,\r\n            {\r\n                uName: this.state.name,\r\n                roomID: room\r\n            }\r\n        )\r\n        .then(\r\n            ({data})=>{\r\n                this.addAndSetState();\r\n                this.componentDidMount();\r\n            }\r\n        )\r\n        .catch(\r\n            (err)=>{\r\n                console.log(err);\r\n            }\r\n        )\r\n    }\r\n    mainGameCode = ()=>{\r\n        this.state.allText.push(this.state.command);\r\n        let lower:string = this.state.command.toLowerCase();\r\n        const words:string[] = lower.split(\" \");\r\n        let realWords:string[] = [];\r\n        words.forEach((word)=>{\r\n            if(word!==\"\"){\r\n                realWords.push(word);\r\n            }\r\n        });\r\n\r\n        let objectText:string = \"\";//for comparing with lower case\r\n        let objectTextUpC:string = \"\";//for comparing with first letter upper case\r\n\r\n        if(realWords.length!==1){\r\n            if(realWords[2]!==undefined){\r\n                objectText = realWords[1]+\" \"+realWords[2];\r\n                objectTextUpC = realWords[1].charAt(0).toUpperCase()+realWords[1].slice(1)+\" \"+realWords[2].charAt(0).toUpperCase()+realWords[2].slice(1);\r\n            }else{\r\n                objectText = realWords[1];\r\n                objectTextUpC = realWords[1].charAt(0).toUpperCase()+realWords[1].slice(1); \r\n            }        \r\n        }\r\n\r\n        let printed:boolean = false;//to see if it has already printed something or not\r\n\r\n        //Special case for Equip and Unequip\r\n        let direction:string = \"AAAAAAAAAA\";\r\n        let errorEquipUnequip:boolean = false;\r\n        if(realWords[0]===\"equip\"){\r\n            if(realWords.length===4){\r\n                if(realWords[1]===\"left\" || realWords[1]===\"left-hand\"){  \r\n                    direction=\"left\";\r\n                    objectText = realWords[2]+\" \"+realWords[3];\r\n                    objectTextUpC = realWords[2].charAt(0).toUpperCase()+realWords[2].slice(1)+\" \"+realWords[3].charAt(0).toUpperCase()+realWords[3].slice(1);\r\n                }\r\n                if(realWords[1]===\"right\" || realWords[1]===\"right-hand\"){\r\n                    direction=\"right\";\r\n                    objectText = realWords[2]+\" \"+realWords[3];\r\n                    objectTextUpC = realWords[2].charAt(0).toUpperCase()+realWords[2].slice(1)+\" \"+realWords[3].charAt(0).toUpperCase()+realWords[3].slice(1);\r\n                }\r\n                if(realWords[3]===\"left\" || realWords[3]===\"left-hand\"){ \r\n                    direction=\"left\";\r\n                }\r\n                if(realWords[3]===\"right\" || realWords[3]===\"right-hand\"){\r\n                    direction=\"right\";\r\n                }\r\n            }else if(realWords.length===5){\r\n                if(realWords[1]===\"left\" && realWords[2]===\"hand\"){ \r\n                    direction=\"left\";\r\n                    objectText = realWords[3]+\" \"+realWords[4];\r\n                    objectTextUpC = realWords[3].charAt(0).toUpperCase()+realWords[3].slice(1)+\" \"+realWords[4].charAt(0).toUpperCase()+realWords[4].slice(1);\r\n                }\r\n                if(realWords[1]===\"right\" && realWords[2]===\"hand\"){\r\n                    direction=\"right\";\r\n                    objectText = realWords[3]+\" \"+realWords[4];\r\n                    objectTextUpC = realWords[3].charAt(0).toUpperCase()+realWords[3].slice(1)+\" \"+realWords[4].charAt(0).toUpperCase()+realWords[4].slice(1);\r\n                }\r\n                if(realWords[3]===\"left\" && realWords[4]===\"hand\"){ \r\n                    direction=\"left\";\r\n                }\r\n                if(realWords[3]===\"right\" && realWords[4]===\"hand\"){\r\n                    direction=\"right\";\r\n                }\r\n            }else{\r\n                this.state.allText.push(`The correct way to equip an object is:\r\n                \"equip\" followed by the object and finally the direction of the hand you want to equip it (left or right)`);\r\n                errorEquipUnequip=true;\r\n            }\r\n        }\r\n        if(realWords[0]===\"unequip\"){\r\n            if(realWords.length===2){\r\n                if(realWords[1]===\"left\" || realWords[1]===\"left-hand\"){\r\n                    direction=\"left\"; \r\n                }\r\n                if(realWords[1]===\"right\" || realWords[1]===\"right-hand\"){\r\n                    direction=\"right\"; \r\n                }\r\n            }else if(realWords.length===3){\r\n                if(realWords[1]===\"left\" && realWords[2]===\"hand\"){\r\n                    direction=\"left\";\r\n                    objectText=\"\";\r\n                    objectTextUpC=\"\";\r\n                }\r\n                if(realWords[1]===\"right\" && realWords[2]===\"hand\"){\r\n                    direction=\"right\";\r\n                    objectText=\"\";\r\n                    objectTextUpC=\"\";\r\n                }\r\n            }else if(realWords.length===4){\r\n                if(realWords[1]===\"left\" || realWords[1]===\"left-hand\"){ \r\n                    direction=\"left\";\r\n                    objectText = realWords[2]+\" \"+realWords[3];\r\n                    objectTextUpC = realWords[2].charAt(0).toUpperCase()+realWords[2].slice(1)+\" \"+realWords[3].charAt(0).toUpperCase()+realWords[3].slice(1);\r\n                }\r\n                if(realWords[1]===\"right\" || realWords[1]===\"right-hand\"){ \r\n                    direction=\"right\";\r\n                    objectText = realWords[2]+\" \"+realWords[3];\r\n                    objectTextUpC = realWords[2].charAt(0).toUpperCase()+realWords[2].slice(1)+\" \"+realWords[3].charAt(0).toUpperCase()+realWords[3].slice(1);\r\n                }\r\n                if(realWords[3]===\"left\" || realWords[3]===\"left-hand\"){\r\n                    direction=\"left\";\r\n                }\r\n                if(realWords[3]===\"right\" || realWords[3]===\"right-hand\"){\r\n                    direction=\"right\";\r\n                }\r\n            }else if(realWords.length===5){\r\n                if(realWords[1]===\"left\" && realWords[2]===\"hand\"){ \r\n                    direction=\"left\";\r\n                    objectText = realWords[3]+\" \"+realWords[4];\r\n                    objectTextUpC = realWords[3].charAt(0).toUpperCase()+realWords[3].slice(1)+\" \"+realWords[4].charAt(0).toUpperCase()+realWords[4].slice(1);\r\n                }\r\n                if(realWords[1]===\"right\" && realWords[2]===\"hand\"){ \r\n                    direction=\"right\";\r\n                    objectText = realWords[3]+\" \"+realWords[4];\r\n                    objectTextUpC = realWords[3].charAt(0).toUpperCase()+realWords[3].slice(1)+\" \"+realWords[4].charAt(0).toUpperCase()+realWords[4].slice(1);\r\n                }\r\n                if(realWords[3]===\"left\" && realWords[4]===\"hand\"){\r\n                    direction=\"left\";\r\n                }\r\n                if(realWords[3]===\"right\" && realWords[4]===\"hand\"){\r\n                    direction=\"right\"\r\n                }\r\n            }else{\r\n                this.state.allText.push(`The correct way to unequip an object is:\r\n                \"unequip\" followed by the object and finally the direction of the hand you want to unequip it (left or right)`);\r\n                errorEquipUnequip=true;\r\n            }\r\n        }\r\n        //End special case\r\n\r\n        if((realWords[0]===\"help\" || realWords[0]===\"hint\") && realWords.length===1){\r\n            if(this.state.room.roomEnemyAlive){\r\n                this.state.allText.push(`You're in a battle! Its his life or yours. Don't be reckless, if you die, I die as well.\r\n                You can equip some items from your inventory to fight. Once you decide to attack, just type \"attack\". As a famous\r\n                general once said: \"Good luck\".`);\r\n            }else{\r\n                this.state.allText.push(`Help is on its way. You have various ways of interacting with the world around you.\r\n                Just as you just used the verb \"help\", you can use other verbs to make this world change.\r\n                For instance, if you want to move, you type \"move\" and a direction. \r\n                If you want to grab something, type \"grab\" followed by the object you want to try and grab.\r\n                If you want to get more knowledge of other verbs, type \"help\" followed by the verb you want to know more about.\r\n                If you want to look at your surroundings, type \"look\".\r\n                In the spirit of encouraging exploration, try different verbs and see their effects!`);    \r\n            }\r\n        }else if(realWords[0]===\"exit\"){\r\n            this.state.allText.push(`Your progress is automatically saved every command you make.\r\n            If you want to exit, just press Logout or Adventure at the top of your screen`);\r\n        }\r\n        else if(realWords[0]===\"close\"){\r\n            this.state.allText.push(`There is no benefit in closing something, so why try and close it? Just... leave it as it is.`);\r\n        }\r\n        else if(realWords[0]===\"eat\"){\r\n            this.state.allText.push(`Rather than eating a questionable item, I implore you to \"use\" it. For your (and my) health.`);\r\n        }\r\n        else if(realWords[0]===\"inventory\"){\r\n            let uInv:string[] = [];\r\n            for(let a:number=0;a<this.state.user.userInventory.length;a++){\r\n                uInv.push(this.state.user.userInventory[a].objectName);\r\n            }\r\n            this.state.allText.push(`Your current inventory is: ${uInv}`);\r\n        }\r\n        else if(realWords[0]===\"status\"){\r\n            this.state.allText.push(`Your current health is: ${this.state.user.userRealHealth}/${this.state.user.userBaseHealth}.\r\n            In your left hand a(an): ${this.state.user.userLeftEquip.objectName}. In your right hand you have a(an): ${this.state.user.userRightEquip.objectName}`);\r\n        }\r\n        else if(realWords[0]===\"look\" || realWords[0]===\"observe\"){\r\n            let uInv:string[] = [];\r\n            for(let a:number=0;a<this.state.room.roomObjectsInv.length;a++){\r\n                uInv.push(this.state.room.roomObjectsInv[a].objectName);\r\n            }\r\n            if(uInv.length===0){\r\n                    this.state.allText.push(`${this.state.room.roomLook}`);\r\n            }else{\r\n                    this.state.allText.push(`${this.state.room.roomLook}. In the room you can find: ${uInv}`); \r\n            }\r\n        }\r\n        else if((realWords[0]===\"attack\" || realWords[0]===\"kill\" || realWords[0]===\"damage\" || realWords[0]===\"hit\") && realWords.length>1){\r\n            this.state.allText.push(`If you wish to attack, just type \"${realWords[0]}\", the complicated maths of what to use \r\n            and whom to attack have been figured out by me, your conscience. (No need to praise, but some recognition isn't bad at all).`);\r\n        }\r\n        else if(realWords[0]===\"attack\" || realWords[0]===\"kill\" || realWords[0]===\"damage\" || realWords[0]===\"hit\"){\r\n            if(this.state.room.roomEnemyAlive){\r\n                this.attackSequence();\r\n            }else{\r\n                this.state.allText.push(`If there is no battle, there no need to attack`);\r\n            }\r\n        }\r\n        else if((realWords[0]===\"thanks\" && realWords.length===1) || (realWords[0]===\"thank\" && realWords[1]===\"you\" && realWords.length===2)){\r\n            this.state.allText.push(`You're welcome. I'm glad to help. Also, its really gratifying to hear a compliment`);\r\n        }\r\n        else if(realWords.length===1){\r\n            this.state.allText.push(`You can't possibly think to \"${realWords[0]}\" without a something or a somewhere,\r\n            so please, after every verb, please choose an object to interact with`);\r\n        }\r\n        else if((realWords[0]===\"move\" && realWords.length>2) || (realWords[0]===\"go\" && realWords.length>2)){\r\n            this.state.allText.push(`If you want to try and move an object, please use pull or push, its more specific`);\r\n        }\r\n        else if((realWords[0]===\"open\") && realWords.length===2){\r\n            this.state.allText.push(`There may be more than 1 object with that generic name, please be more specific with the object you interact with`)\r\n        }\r\n        else if(realWords[0]===\"move\" || realWords[0]===\"go\"){\r\n            let roomDecision:ObjectID|string = \"\";\r\n            if(realWords[1]===\"forward\" || realWords[1]===\"front\" ||  realWords[1]===\"ahead\" || realWords[1]===\"north\"){\r\n                if(this.state.room.roomForward.toString().length>25){\r\n                    this.state.allText.push(`${this.state.room.roomForward}`);\r\n                }else{\r\n                    if(this.state.room.roomForwardBool){\r\n                        if(this.state.room.roomEnemyAlive){\r\n                            this.state.allText.push(\"You can't run away from a battle\");\r\n                        }else{\r\n                            roomDecision = this.state.room.roomForward;\r\n                            this.changeRoom(roomDecision);\r\n                        }\r\n                    }else{\r\n                        this.state.allText.push(\"Your path is blocked. Find a way get where you want\");\r\n                    }\r\n                }\r\n            }else if(realWords[1]===\"backward\" || realWords[1]===\"back\" || realWords[1]===\"behind\" || realWords[1]===\"south\"){\r\n                if(this.state.room.roomBackward.toString().length>25){\r\n                    this.state.allText.push(`${this.state.room.roomBackward}`);\r\n                }else{\r\n                    if(this.state.room.roomBackwardBool){\r\n                        if(this.state.room.roomEnemyAlive){\r\n                            this.state.allText.push(\"You can't run away from a battle\");\r\n                        }else{\r\n                            roomDecision = this.state.room.roomBackward;\r\n                            this.changeRoom(roomDecision);\r\n                        }\r\n                    }else{\r\n                        this.state.allText.push(\"Your path is blocked. Find a way get where you want\");\r\n                    }\r\n                }\r\n            }else if(realWords[1]===\"left\" || realWords[1]===\"west\"){\r\n                if(this.state.room.roomLeft.toString().length>25){\r\n                    this.state.allText.push(`${this.state.room.roomLeft}`);\r\n                }else{\r\n                    if(this.state.room.roomLeftBool){\r\n                        if(this.state.room.roomEnemyAlive){\r\n                            this.state.allText.push(\"You can't run away from a battle\");\r\n                        }else{\r\n                            roomDecision = this.state.room.roomLeft;\r\n                            this.changeRoom(roomDecision);\r\n                        }\r\n                    }else{\r\n                        this.state.allText.push(\"Your path is blocked. Find a way get where you want\");\r\n                    }\r\n                }\r\n            }else if(realWords[1]===\"east\" || realWords[1]===\"right\" ){\r\n                if(this.state.room.roomRight.toString().length>25){\r\n                    this.state.allText.push(`${this.state.room.roomRight}`);\r\n                }else{\r\n                    if(this.state.room.roomRightBool){\r\n                        if(this.state.room.roomEnemyAlive){\r\n                            this.state.allText.push(\"You can't run away from a battle\");\r\n                        }else{\r\n                            roomDecision = this.state.room.roomRight;\r\n                            this.changeRoom(roomDecision);\r\n                        }\r\n                    }else{\r\n                        this.state.allText.push(\"Your path is blocked. Find a way get where you want\");\r\n                    }\r\n                }\r\n                this.addAndSetState();\r\n                this.componentDidMount();\r\n            }else{\r\n                this.state.allText.push(`That is not a valid way to move. Please type a valid \"move\" command`);\r\n                this.addAndSetState();\r\n                this.componentDidMount();\r\n            }\r\n        }\r\n        else{\r\n            if(!errorEquipUnequip){\r\n                saxios.get(`api/user/allVerbs`)\r\n                .then(\r\n                    ({data})=>{\r\n                        let allV:IVerbs[] = data;\r\n                        for (let c:number=0;c<allV.length;c++){//cycle through each verb to see if the first word is a valid verb\r\n                            if(realWords[0]===allV[c].name){\r\n                                let verbText:string = \"object\"+allV[c].associateVerb.charAt(0).toUpperCase()+allV[c].associateVerb.slice(1);//the property in each object that will be searched\r\n                                for (let d:number=0;d<allV.length;d++){//cycle through each verb to see if the second word is a valid verb\r\n                                    if(objectText===allV[d].name && allV[c].associateVerb===\"help\"){\r\n                                        this.state.allText.push(allV[d].objectHelp);\r\n                                        this.addAndSetState();\r\n                                        printed=true;\r\n                                    }\r\n                                }\r\n                                for(let a:number = 0;a<this.state.room.roomObjectsEnv.length;a++){\r\n                                    if(this.state.room.roomObjectsEnv[a].objectName === objectTextUpC){\r\n                                        for(let b:number = 0;b<(Object.entries(this.state.room.roomObjectsEnv[a])).length;b++){\r\n                                            if((Object.entries(this.state.room.roomObjectsEnv[a]))[b][0]===verbText){\r\n                                                for(let c:number = 0;c<(Object.entries(this.state.room.roomObjectsEnv[a])).length;c++){\r\n                                                    if(Object.entries(this.state.room.roomObjectsEnv[a])[c][0]===(verbText+\"Bool\")){\r\n                                                        if (Object.entries(this.state.room.roomObjectsEnv[a])[c][1] || this.checkIfKey(realWords)){\r\n                                                            let uri:string = '';\r\n                                                            let msg:string = '';\r\n                                                            if(realWords[0]===\"open\"){\r\n                                                                msg = `${(Object.entries(this.state.room.roomObjectsEnv[a]))[b][1]}`;\r\n                                                                if(realWords[2]===\"door\"||realWords[2]===\"doors\"||realWords[2]===\"Door\"||realWords[2]===\"doors\"){\r\n                                                                    uri = `/api/user/openDoor`;\r\n                                                                    msg=`You opened the ${objectTextUpC}`;\r\n                                                                }\r\n                                                                if(realWords[2]===\"chest\"||realWords[2]===\"Chest\"){\r\n                                                                    uri = `/api/user/openChest`;\r\n                                                                }\r\n                                                            }\r\n                                                            if(uri!==''){\r\n                                                                saxios.put(\r\n                                                                    uri,\r\n                                                                    {\r\n                                                                        roomID: this.state.user.userCurrentRoom,\r\n                                                                        uName: this.state.name,\r\n                                                                        objectN: objectTextUpC,\r\n                                                                    }\r\n                                                                )\r\n                                                                .then(\r\n                                                                    ({data})=>{\r\n                                                                        this.state.allText.push(msg);\r\n                                                                        if(data.more){\r\n                                                                            this.state.allText.push(data.more);\r\n                                                                        }\r\n                                                                        this.addAndSetState();\r\n                                                                        this.componentDidMount();\r\n                                                                    }\r\n                                                                )\r\n                                                                .catch(\r\n                                                                    (err)=>{\r\n                                                                        console.log(err);\r\n                                                                    }\r\n                                                                )\r\n                                                                printed=true;\r\n                                                                break;\r\n                                                            }\r\n                                                        }else{\r\n                                                            this.state.allText.push(`${(Object.entries(this.state.room.roomObjectsEnv[a]))[b][1]}`);\r\n                                                            this.addAndSetState();\r\n                                                            printed=true;\r\n                                                            this.componentDidMount();\r\n                                                            break;\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n                                                if(printed){\r\n                                                    break;\r\n                                                }     \r\n                                            }\r\n                                        }\r\n                                        if(printed){\r\n                                            break;\r\n                                        }\r\n                                    }\r\n                                }\r\n                                let ifInv:boolean = false;\r\n                                for(let c:number=0;c<this.state.allInventory.length;c++){\r\n                                    if(this.state.allInventory[c]===objectTextUpC){\r\n                                        ifInv=true;\r\n                                    }\r\n                                }\r\n                                if(ifInv){\r\n                                    let mainArray:any[] = [];\r\n                                    let uri:string = ``;\r\n                                    if(verbText===\"objectGrab\"){\r\n                                        mainArray = this.state.room.roomObjectsInv;\r\n                                        uri = `/api/user/grab`;\r\n                                    }\r\n                                    else if(verbText===\"objectUse\" && realWords[2]===\"key\"){\r\n                                        uri = `/api/user/useKey`;\r\n                                        mainArray = this.state.user.userInventory;\r\n                                    }\r\n                                    else if(verbText===\"objectUse\" || verbText===\"objectEat\"){\r\n                                        uri = `/api/user/useHealingItem`;\r\n                                        mainArray = this.state.user.userInventory;\r\n                                    }\r\n                                    else if(verbText!==\"objectDrop\" && verbText!==\"objectEquip\" && verbText!==\"objectUnequip\"){\r\n                                        mainArray = this.state.user.userInventory;\r\n                                    }\r\n                                    else{\r\n                                        for(let s:number=0;s<this.state.room.roomObjectsInv.length;s++){\r\n                                            mainArray.push(this.state.room.roomObjectsInv[s]);\r\n                                        }\r\n                                        for(let s:number=0;s<this.state.user.userInventory.length;s++){\r\n                                            mainArray.push(this.state.user.userInventory[s]);\r\n                                        }\r\n                                    }\r\n                                    console.log(objectTextUpC);\r\n                                    for(let a:number=0;a<mainArray.length;a++){\r\n                                        if(mainArray[a].objectName === objectTextUpC){\r\n                                            for(let b:number = 0;b<(Object.entries(mainArray[a])).length;b++){\r\n                                                if(Object.entries(mainArray[a])[b][0]===verbText){\r\n                                                    let obj:string=mainArray[a]\r\n                                                    if(verbText===\"objectDrop\"){\r\n                                                        uri = `/api/user/drop`;\r\n                                                    }\r\n                                                    if(verbText===\"objectEquip\"){\r\n                                                        uri=`/api/user/equip`\r\n                                                    }\r\n                                                    if(verbText===\"objectUnequip\"){\r\n                                                        uri=`/api/user/unequip`;\r\n                                                        obj=objectTextUpC;\r\n                                                    }\r\n                                                    if(uri!==``){\r\n                                                        saxios.put(\r\n                                                            `${uri}`,\r\n                                                            {\r\n                                                                object: obj,\r\n                                                                currentRName: this.state.room.roomName,\r\n                                                                uName: this.state.name,\r\n                                                                InvObjs: mainArray,\r\n                                                                leftE: this.state.user.userLeftEquip.objectName,\r\n                                                                rightE: this.state.user.userRightEquip.objectName,\r\n                                                                dir: direction,\r\n                                                                realH: this.state.user.userRealHealth,\r\n                                                                baseH: this.state.user.userBaseHealth,\r\n                                                                doorP: realWords[1].charAt(0).toUpperCase()+realWords[1].slice(1),\r\n                                                            }\r\n                                                        )\r\n                                                        .then(\r\n                                                            ({data})=>{\r\n                                                                console.log(data.length);\r\n                                                                console.log(data.msg);\r\n                                                                if(!(data.msg===undefined) || data.length>0){\r\n                                                                    this.state.allText.push(`${data.msg}`);\r\n                                                                }\r\n                                                                if((!data.msg) || data.msg===\"\" || data.length===0){\r\n                                                                    this.state.allText.push((Object.entries(mainArray[a])[b][1] as string));\r\n                                                                }\r\n                                                                if(data.more){\r\n                                                                    this.state.allText.push(`${data.more}`);\r\n                                                                }\r\n                                                                this.setState({\r\n                                                                    msg: \"\"\r\n                                                                },()=>{\r\n                                                                    this.addAndSetState();\r\n                                                                    this.componentDidMount();\r\n                                                                });\r\n                                                            }\r\n                                                        )\r\n                                                        .catch(\r\n                                                            (err)=>{\r\n                                                                console.log(err);\r\n                                                            }\r\n                                                        )\r\n                                                        printed=true;     \r\n                                                    }\r\n                                                    if(!printed){\r\n                                                        this.addAndSetState();\r\n                                                        printed=true;  \r\n                                                        this.componentDidMount();\r\n                                                        break; \r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    if(!printed){\r\n                                        this.state.allText.push(`There's no ${objectTextUpC} available to ${allV[c].associateVerb}`);\r\n                                        this.addAndSetState();\r\n                                        printed=true;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        if(!printed){\r\n                            this.state.allText.push(`You can't possibly think to \"${realWords[0]}\" ${objectTextUpC}`);\r\n                            this.addAndSetState();\r\n                        }\r\n                    }\r\n                )\r\n                .catch(\r\n                    (err)=>{\r\n                        console.log(err);\r\n                    }\r\n                )    \r\n            }\r\n        }\r\n        if(!printed){\r\n            this.addAndSetState();\r\n        }\r\n    }\r\n    onClickBtn = (e: React.MouseEvent<HTMLButtonElement>)=>{\r\n        if(this.state.command!==\"\"){\r\n            this.mainGameCode();\r\n        }\r\n    }\r\n    onKeyPress = (e: React.KeyboardEvent<HTMLInputElement>)=>{\r\n        if(e.keyCode===13){\r\n            if(this.state.command!==\"\"){\r\n                this.mainGameCode();\r\n            }\r\n        }\r\n    }\r\n    render(){\r\n        let num:number=0;\r\n        let uiItems:object;\r\n        if(this.state.allText!==null){\r\n            uiItems = this.state.allText.map(\r\n                (item)=>{\r\n                    num++;\r\n                    return(\r\n                        <p key={num}>{item}</p>\r\n                    )\r\n                }\r\n            );    \r\n        }else{\r\n            uiItems = <p key=\"0\">Empty</p>\r\n        }\r\n        return(\r\n            <Page auth={this.props.auth}>\r\n                <div className=\"container d-flex flex-column align-items-center justify-content-center\">\r\n                    <aside \r\n                        className=\"bg-secondary\"\r\n                        id=\"aside\"\r\n                    >\r\n                        {uiItems}\r\n                    </aside>\r\n                    &nbsp;\r\n                    <div className=\"container d-flex flex-row\">\r\n                        <Input\r\n                            type=\"text\" \r\n                            className=\"form-control bg-secondary text-white\" \r\n                            placeholder=\"Enter your command\"\r\n                            name=\"command\"\r\n                            value={this.state.command}\r\n                            onChange={this.onChangeText}\r\n                            keyDown={this.onKeyPress}\r\n                        ></Input>\r\n                        <button className=\"btn btn-success\" onClick={this.onClickBtn}><IoIosReturnLeft/></button>\r\n                    </div>\r\n                </div>\r\n            </Page>\r\n        )\r\n    }\r\n}\r\ninterface IGameState{\r\n    command: string;\r\n    name: string|null;\r\n    allText: string[];\r\n    user: IUser;\r\n    room: IRoom;\r\n    allInventory: string[];\r\n    msg: string;\r\n}\r\ninterface IUser{\r\n    _id: string;\r\n    userCurrentRoom: ObjectID|string;\r\n    userInventory: any[];\r\n    userLeftEquip: IEquip;\r\n    userRightEquip: IEquip;\r\n    userBaseHealth: number;\r\n    userRealHealth: number;\r\n    userAtk: number;\r\n}\r\ninterface IRoom{\r\n    roomName: string;\r\n    roomEnter: string;\r\n    roomEnterEnemy: string;\r\n    roomLook: string;\r\n    roomLeft: ObjectID|string;\r\n    roomRight: ObjectID|string;\r\n    roomForward: ObjectID|string;\r\n    roomBackward: ObjectID|string;\r\n    roomObjectsInv: any[]\r\n    roomObjectsEnv: any[]\r\n    roomEnemy: IEnemy;\r\n    roomEnemyHealth: number;\r\n    roomEnemyAlive: boolean;\r\n    roomLeftBool: boolean;\r\n    roomRightBool: boolean;\r\n    roomForwardBool: boolean;\r\n    roomBackwardBool: boolean;\r\n}\r\ninterface IVerbs{\r\n    name: string;\r\n    objectHelp: string;\r\n    associateVerb: string;\r\n}\r\ninterface IEquip{\r\n    objectName: string;\r\n    objectType: string;\r\n    objectValue: number;\r\n    objectWeight: number;\r\n}\r\ninterface IEnemy{\r\n    enemyName: string;\r\n    enemyATK: number;\r\n    enemyWeapon: IEquip;\r\n    enemyDesc: string;\r\n}","import React, {Component} from 'react';\r\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport { setLocalStorage, getLocalStorage, removeLocalStorage } from './Components/Utilities/Utilities';\r\nimport PrivateRoute from './Components/SecureRoute/SecureRoute';\r\n\r\nimport Home from './Components/Pages/Public/Home/Home';\r\nimport Login from './Components/Pages/Public/Login/Login';\r\nimport New from './Components/Pages/Public/New/New';\r\nimport Game from './Components/Pages/Private/Game/Game';\r\n\r\nclass App extends Component<IAppProps, IAppState>{\r\n  constructor(props: IAppProps){\r\n    super(props);\r\n    this.state = {\r\n      username: (getLocalStorage(\"name\")||''),\r\n      useremail: (getLocalStorage(\"email\")||''),\r\n    };\r\n  }\r\n  login=(name: string, email: string)=>{\r\n    const uName = name;\r\n    const uEmail = email;\r\n    this.setState({\r\n      username: uName,\r\n      useremail: uEmail\r\n    });\r\n    setLocalStorage(\"name\", uName);\r\n    setLocalStorage(\"email\", uEmail);\r\n  }\r\n  logout=()=>{\r\n    this.setState({\r\n      username: '',\r\n      useremail: ''\r\n    });\r\n    removeLocalStorage(\"name\");\r\n    removeLocalStorage(\"email\");\r\n  }\r\n  render(){\r\n    const auth = {\r\n      email: this.state.useremail,\r\n      name: this.state.username,\r\n      logout: this.logout\r\n    }\r\n    return(\r\n      <Router>\r\n        <Switch>\r\n          <Route render={(props) => { return (<Home {...props} auth={auth}/>) }} path=\"/\" exact />\r\n          <Route render={(props) => { return (<Login {...props} auth={auth} login={this.login} />)}} path=\"/login\" exact/>\r\n          <Route render={(props) => { return (<New {...props} auth={auth}/>)}} path='/new' exact/>\r\n          <PrivateRoute component={Game} path=\"/game\" auth={auth}/>\r\n        </Switch>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\ninterface IAppProps{\r\n\r\n}\r\ninterface IAppState{\r\n  username: string;\r\n  useremail: string;\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}